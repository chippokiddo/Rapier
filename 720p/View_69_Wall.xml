<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!--//// START WALL VIEW //////////////////////////////////////////////////////////////////////////-->
	<include name="WallView">
		<control type="group" id="500">
		    <defaultcontrol always="true">69</defaultcontrol>
			<visible>Control.IsVisible(69)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="panel" id="69">
				<viewtype label="31113">bigicon</viewtype>
				<include condition="Window.IsActive(Videos)">WallViewVideoDimensions</include>
				<include condition="Window.IsActive(Music)">WallViewMusicDimensions</include>
				<pagecontrol>91202</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">403</scrolltime>
				<include condition="Skin.HasSetting(WallViewVerticalNavigation)">WallViewVertical</include>
				<include condition="!Skin.HasSetting(WallViewVerticalNavigation)">WallViewHorizontal</include>
				<visible>Container.Content(Movies) | Container.Content(TVShows) | Container.Content(Albums)</visible>
				<itemlayout width="160" height="225" condition="[Container.Content(Movies) + [Skin.String(MoviesWallStyle,1) | String.IsEmpty(Skin.String(MoviesWallStyle))]] | [Container.Content(TVShows) + [Skin.String(TVShowsWallStyle,1) | String.IsEmpty(Skin.String(TVShowsWallStyle))]]">
					<include content="WallItemlayout">
						<param name="left" value="10" />
						<param name="width" value="160" />
						<param name="height" value="225" />
						<param name="top1" value="200" />
						<param name="top2" value="235" />
						<param name="overlay_left" value="135" />
					</include>
					<include content="WallUnwatchedEpisodes">
						<param name="left" value="133" />
						<param name="top1" value="200" />
						<param name="top2" value="235" />
					</include>
				</itemlayout>
				<itemlayout width="92" height="135" condition="[Container.Content(Movies) + Skin.String(MoviesWallStyle,2)] | [Container.Content(TVShows) + Skin.String(TVShowsWallStyle,2)]">
					<include content="WallItemlayout">
						<param name="left" value="8" />
						<param name="width" value="92" />
						<param name="height" value="135" />
						<param name="top1" value="110" />
						<param name="top2" value="145" />
						<param name="overlay_left" value="65" />
					</include>
					<include content="WallUnwatchedEpisodes">
						<param name="left" value="63" />
						<param name="top1" value="110" />
						<param name="top2" value="145" />
					</include>
				</itemlayout>
				<itemlayout width="214" height="225" condition="Container.Content(Albums)">
					<control type="image">
						<description>Default Cover</description>
						<left>10</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>214</width>
						<height>225</height>
						<bordersize>40</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>10</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>214</width>
						<height>225</height>
						<texture background="true">$INFO[ListItem.Thumb]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>Dim</description>
						<left>10</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>214</width>
						<height>225</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!String.IsEmpty(ListItem.Thumb) + !Skin.HasSetting(DoNotDimMusicWallCover)</visible>
						<include>CoverDimAnim</include>
					</control>
				</itemlayout>
				<focusedlayout width="160" height="225" condition="[Container.Content(Movies) + [Skin.String(MoviesWallStyle,1) | String.IsEmpty(Skin.String(MoviesWallStyle))]] | [Container.Content(TVShows) + [Skin.String(TVShowsWallStyle,1) | String.IsEmpty(Skin.String(TVShowsWallStyle))]]">
					<control type="group">
						<depth>DepthContent+</depth>
						<include content="WallFocusedlayout">
							<param name="width" value="180" />
							<param name="height" value="245" />
							<param name="top" value="200" />
							<param name="left_movies" value="135" />
							<param name="left_tvshows" value="133" />
						</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">WallStyle1FocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="[Container.Content(Movies) + Skin.String(MoviesWallStyle,2)] | [Container.Content(TVShows) + Skin.String(TVShowsWallStyle,2)]">
					<control type="group">
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include content="WallFocusedlayout">
							<param name="width" value="112" />
							<param name="height" value="155" />
							<param name="top" value="110" />
							<param name="left_movies" value="67" />
							<param name="left_tvshows" value="65" />
						</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">WallStyle2FocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="214" height="225" condition="Container.Content(Albums)">
					<control type="group">
						<depth>DepthContent+</depth>
						<include>WallViewVerticalAnimation</include>
						<control type="image">
							<width>234</width>
							<height>245</height>
							<texture border="7">covers/cover-case-focus.png</texture>
							<aspectratio>stretch</aspectratio>
							<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
						</control>
						<control type="image">
							<width>234</width>
							<height>245</height>
							<texture>dim.png</texture>
							<bordersize>9</bordersize>
							<aspectratio>stretch</aspectratio>
						</control>
						<control type="image">
							<width>234</width>
							<height>245</height>
							<bordersize>50</bordersize>
							<texture background="true">$INFO[ListItem.ActualIcon]</texture>
							<aspectratio>keep</aspectratio>
							<visible>String.IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<width>234</width>
							<height>245</height>
							<texture background="true">$INFO[ListItem.Thumb]</texture>
							<bordersize>10</bordersize>
							<aspectratio>scale</aspectratio>
						</control>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MusicWallFocusAnim</include>
					</control>
				</focusedlayout>
			</control>
			
			<control type="group">
				<visible>Control.HasFocus(69) + System.IdleTime(1) + [[Container.Content(Movies) + Skin.HasSetting(HideMoviesWallExtendedInfoPanel)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsWallExtendedInfoPanel)]] + !String.IsEmpty(ListItem.Title)</visible>
				<depth>DepthContent+</depth>
				<left>-3</left>
				<top>43</top>
				
				<animation effect="slide" end="159,0" condition="Container(69).Row(0) + Container(69).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,0" condition="Container(69).Row(0) + [Container(69).Column(0) | Container(69).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,0" condition="Container(69).Row(0) + [Container(69).Column(1) | Container(69).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,0" condition="Container(69).Row(0) + Container(69).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,0" condition="Container(69).Row(0) + Container(69).Column(3)">Conditional</animation>
				<animation effect="slide" end="159,177" condition="Container(69).Row(1) + Container(69).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,177" condition="Container(69).Row(1) + [Container(69).Column(0) | Container(69).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,177" condition="Container(69).Row(1) + [Container(69).Column(1) | Container(69).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,177" condition="Container(69).Row(1) + Container(69).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,177" condition="Container(69).Row(1) + Container(69).Column(3)">Conditional</animation>
				<animation effect="slide" end="0,177" condition="Container(69).Row(1) + Container(69).Column(4)">Conditional</animation>
				<animation effect="slide" end="159,347" condition="Container(69).Row(2) + Container(69).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,347" condition="Container(69).Row(2) + [Container(69).Column(0) | Container(69).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,347" condition="Container(69).Row(2) + [Container(69).Column(1) | Container(69).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,347" condition="Container(69).Row(2) + Container(69).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,347" condition="Container(69).Row(2) + Container(69).Column(3)">Conditional</animation>
				<animation effect="slide" end="0,347" condition="Container(69).Row(2) + Container(69).Column(4)">Conditional</animation>
				
				<animation type="Visible">
					<effect type="fade" start="0" end="100" time="300"/>
					<effect type="zoom" end="100" start="50" time="400" tween="back" easing="out" center="243,166"/>
				</animation>
				
				<control type="image">
					<width>487</width>
					<height>333</height>
					<texture border="8">panels/panel.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				
				<control type="image">
					<description>Content Background</description>
					<left>8</left>
					<top>8</top>
					<width>471</width>
					<height>317</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>72</top>
					<width>461</width>
					<height>25</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>101</top>
					<width>461</width>
					<height>149</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>255</top>
					<width>461</width>
					<height>25</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>285</top>
					<width>461</width>
					<height>25</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>ListItem.IsCollection</visible>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>11</top>
					<width>461</width>
					<height>58</height>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>!String.IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableVideosClearLogo)</visible>
				</control>
				
				<control type="label">
					<description>Title</description>
					<top>10</top>
					<left>13</left>
					<width>461</width>
					<height>58</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>KaraokeFont</font>
					<textcolor>MediaInfoTitleColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
					<scroll>true</scroll>
					<visible>String.IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableVideosClearLogo)</visible>
				</control>
				
				<control type="label">
					<description>Genre</description>
					<left>18</left>
					<top>72</top>
					<width>451</width>
					<height>25</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>MediaInfoFont2</font>
					<textcolor>MediaInfoItemColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
					<scroll>true</scroll>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>18</left>
					<top>108</top>
					<width>451</width>
					<height>137</height>
					<font>SettingsContentFont2</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$VAR[WallPlot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">true</autoscroll>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="label">
					<description>Media Info</description>
					<left>14</left>
					<top>255</top>
					<width>459</width>
					<height>25</height>
					<align>center</align>
					<aligny>center</aligny>
					<include>ListInfoViewCatLabel</include>
					<label>$VAR[WallInfolabel]</label>
				</control>
				
				<control type="label">
					<description>Media Info</description>
					<left>18</left>
					<top>285</top>
					<width>451</width>
					<height>25</height>
					<align>center</align>
					<aligny>center</aligny>
					<include>ListInfoViewCatLabel</include>
					<label>$VAR[MovieYear,$LOCALIZE[345]: [COLOR=MediaInfoItemColor2],[/COLOR]]</label>
					<visible>ListItem.IsCollection</visible>
				</control>
				
				<control type="grouplist">
					<description>Media Flags Area</description>
					<left>13</left>
					<top>285</top>
					<width>461</width>
					<height>35</height>
					<itemgap>5</itemgap>
					<align>center</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<include>MediaFlagFadeAnim</include>
					<visible>Container.Content(Movies) + !Skin.HasSetting(DisableMediaFlags)</visible>
					<include>VideoSourceMediaFlags</include>
					<include>VideoCodecMediaFlags</include>
					<include>AudioMediaFlags</include>
					<include>AspectMediaFlags</include>
					<include>SubtitleMediaFlags</include>
				</control>
				
				<control type="grouplist">
					<description>Media Flags Area</description>
					<left>13</left>
					<top>285</top>
					<width>461</width>
					<height>35</height>
					<itemgap>5</itemgap>
					<align>center</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<include>MediaFlagFadeAnim</include>
					<visible>Container.Content(TVShows) + !Skin.HasSetting(DisableMediaFlags)</visible>
					<control type="group">
						<visible>System.AddonIsEnabled(plugin.video.themoviedb.helper) + !Skin.HasSetting(EnableNextAiredStatusMediaFlag)</visible>
						<width>104</width>
						<control type="image">
							<width>104</width>
							<height>35</height>
							<texture border="6">flagging/$VAR[MediaFlagTheme]/flag-big-bg.png</texture>
							<animation effect="fade" time="200">VisibleChange</animation>
							<visible>![String.IsEmpty(Container(5055).ListItem.Status) + String.IsEmpty(ListItem.Status)]</visible>
						</control>
						<control type="label">
							<description>Next Aired Status</description>
							<left>2</left>
							<width>100</width>
							<height>35</height>
							<font>NextAiredTimeFont</font>
							<textcolor>SelectedColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<wrapmultiline>true</wrapmultiline>
							<label>$VAR[TVShowStatusVar]</label>
						</control>
					</control>
					<control type="group">
						<visible>!String.IsEmpty(ListItem.Studio)</visible>
						<width>58</width>
						<control type="image">
							<width>58</width>
							<height>35</height>
							<texture border="6">flagging/$VAR[MediaFlagTheme]/flag-bg.png</texture>
						</control>
						<control type="image">
							<description>Studio Flag</description>
							<width>58</width>
							<height>35</height>
							<aspectratio>stretch</aspectratio>
							<texture>resource://resource.images.studios.white/$INFO[ListItem.Studio].png</texture>
						</control>
					</control>
				</control>
			</control>
			
			<include content="WallViewScrollbar">
				<param name="id" value="91202" />
			</include>
			
			<control type="group" id="659">
				<description>Bottom Bar Area</description>
				<depth>DepthContent+</depth>
				<top>BottomPaneOffsetY</top>
				<visible>Control.HasFocus(69) + System.IdleTime(2)</visible>
				<visible>[Container.Content(Movies) + !Skin.HasSetting(HideMoviesWallInfoPanel)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShowsWallInfoPanel)] | [Container.Content(Albums) + !Skin.HasSetting(HideMusicWallInfoPanel)]</visible>
				<animation effect="slide" start="0,65" time="300">Visible</animation>
				<include>InfoPaneImage</include>
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
				
				<control type="label">
					<include>InfoPaneItemTitle</include>
					<label>[B]$INFO[ListItem.Label][/B]</label>
					<visible>[Window.IsActive(Videos) + [String.IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableVideosClearLogo)]] | Container.Content(Albums)</visible>
				</control>
				
				<control type="label">
					<include>InfoPaneItemTitle2</include>
					<label>$INFO[ListItem.Artist]</label>
					<visible>Container.Content(Albums)</visible>
				</control>
				
				<control type="group">
					<animation effect="slide" end="0,-6" condition="true">Conditional</animation>
					<include condition="Window.IsActive(Videos) + !Skin.HasSetting(DisableVideosClearLogo)">InfoPaneClearLogoVideos</include>
				</control>
				
				<control type="group">
					<visible>[Container.Content(Movies) + !Skin.HasSetting(ShowMoviesWallRating)] | [Container.Content(TVShows) + !Skin.HasSetting(ShowTVShowsWallRating)]</visible>
					<animation effect="slide" end="0,12" time="100" condition="!String.IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableVideosClearLogo)">Conditional</animation>
						
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$VAR[MovieGenre]</label>
						<visible>Window.IsActive(Videos)</visible>
					</control>
					
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$INFO[ListItem.Label2]</label>
						<visible>Window.IsActive(Videos,Files) + ![Container.Content(Movies) | Container.Content(TVShows)]</visible>
					</control>
				</control>
				
				<control type="group">
					<visible>[Container.Content(Movies) + Skin.HasSetting(ShowMoviesWallRating)] | [Container.Content(TVShows) + Skin.HasSetting(ShowTVShowsWallRating)]</visible>
					<animation effect="slide" end="0,12" time="100" condition="!String.IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableVideosClearLogo)">Conditional</animation>
					
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$VAR[RatingType]</label>
						<visible>[[Container.Content(Movies) + Skin.HasSetting(DoNotUseStarRatingMovies)] | [Container.Content(TVShows) + Skin.HasSetting(DoNotUseStarRatingTVShows)]] + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
					</control>
					
					<control type="image">
						<left>590</left>
						<top>24</top>
						<width>100</width>
						<height>16</height>
						<texture background="true">$VAR[StarRating]</texture>
						<aspectratio>keep</aspectratio>
						<visible>[[Container.Content(Movies) + !Skin.HasSetting(DoNotUseStarRatingMovies)] | [Container.Content(TVShows) + !Skin.HasSetting(DoNotUseStarRatingTVShows)]] + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
						<include>MediaFlagFadeAnim</include>
					</control>
				</control>
			</control>
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	<!--//// END WALL VIEW ////////////////////////////////////////////////////////////////////////////-->
	
	<!-- INCLUDES -->
	<include name="WallViewVideoDimensions">
		<left>-10</left>
		<width>1300</width>
	</include>
	
	<include name="WallViewMusicDimensions">
		<left>-12</left>
		<width>1304</width>
	</include>
	
	<include name="WallViewHorizontal">
		<top>35</top>
		<height>695</height>
		<orientation>horizontal</orientation>
		<onup>850</onup>
		<ondown>150</ondown>
	</include>
	
	<include name="WallViewVertical">
		<top>0</top>
		<height>ScreenHeight</height>
		<orientation>vertical</orientation>
		<onleft>850</onleft>
		<onright>150</onright>
	</include>
	
	<include name="WallViewTop">
		<top>$PARAM[top]</top>
	</include>
	
	<include name="WallItemlayout">
		<control type="group">
			<include>MissingVideoFadeAnim</include>
			<control type="image">
				<description>Default Cover</description>
				<left>$PARAM[left]</left>
				<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
				<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bordersize>18</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="60" condition="true">Conditional</animation>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>$PARAM[left]</left>
				<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
				<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>$PARAM[left]</left>
				<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
				<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>[Container.Content(Movies) + !Skin.HasSetting(DoNotDimMoviesWallCover)] | [Container.Content(TVShows) + !Skin.HasSetting(DoNotDimTVShowsWallCover)]</visible>
				<include>CoverDimAnim</include>
			</control>
		</control>
		<control type="image">
			<description>Overlay</description>
			<left>$PARAM[overlay_left]</left>
			<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top1]" /></include>
			<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top2]" /></include>
			<width>24</width>
			<height>24</height>
			<texture background="true">$INFO[ListItem.Overlay]</texture>
			<aspectratio>keep</aspectratio>
			<visible>[Container.Content(Movies) + !Skin.HasSetting(HideMoviesWallOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShowsWallOverlay)]</visible>
		</control>
		<control type="image">
			<description>Watched Partial</description>
			<left>$PARAM[overlay_left]</left>
			<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top1]" /></include>
			<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top2]" /></include>
			<width>24</width>
			<height>24</height>
			<texture background="true">$VAR[WatchedPartial]</texture>
			<aspectratio>keep</aspectratio>
			<visible>Container.Content(Movies) + ListItem.IsResumable + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesWallOverlay)</visible>
		</control>
	</include>
	
	<include name="WallFocusedlayout">
		<include>WallViewVerticalAnimation</include>
		<control type="image">
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>
		<control type="group">
			<include>MissingVideoFadeAnim</include>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture>dim.png</texture>
				<bordersize>9</bordersize>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bordersize>28</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
			</control>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture background="true">$VAR[PosterThumb]</texture>
				<bordersize>10</bordersize>
				<aspectratio>scale</aspectratio>
			</control>
		</control>
		<control type="group">
			<visible>Container.Content(Movies)</visible>
			<top>$PARAM[top]</top>
			<left>$PARAM[left_movies]</left>
			<control type="image">
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideMoviesWallOverlay)</visible>
			</control>
			<control type="image">
				<description>Watched Partial</description>
				<width>24</width>
				<height>24</height>
				<texture background="true">$VAR[WatchedPartial]</texture>
				<aspectratio>keep</aspectratio>
				<visible>ListItem.IsResumable + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesWallOverlay)</visible>
			</control>
		</control>
		<control type="group">
			<visible>Container.Content(TVShows)</visible>
			<top>$PARAM[top]</top>
			<left>$PARAM[left_tvshows]</left>
			<control type="image">
				<width>26</width>
				<height>26</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay)</visible>
			</control>
			<control type="image">
				<description>Unwatched Overlay</description>
				<width>26</width>
				<height>26</height>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<animation effect="fade" end="80" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<width>26</width>
				<height>26</height>
				<font>ListFont3</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodes99-]</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<width>26</width>
				<height>26</height>
				<font>ListFont4</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodes99+]</visible>
			</control>
		</control>
	</include>
	
	<include name="WallUnwatchedEpisodes">
		<control type="group">
			<visible>Container.Content(TVShows) + !Skin.HasSetting(HideTVShowsWallOverlay)</visible>
			<left>$PARAM[left]</left>
			<control type="image">
				<description>Unwatched Overlay</description>
				<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top1]" /></include>
				<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top2]" /></include>
				<width>26</width>
				<height>26</height>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<animation effect="fade" end="80" condition="true">Conditional</animation>
				<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top1]" /></include>
				<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top2]" /></include>
				<width>26</width>
				<height>26</height>
				<font>ListFont3</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>$EXP[UnwatchedEpisodes99-]</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top1]" /></include>
				<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="$PARAM[top2]" /></include>
				<width>26</width>
				<height>26</height>
				<font>ListFont4</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>$EXP[UnwatchedEpisodes99+]</visible>
			</control>
		</control>
	</include>
	
	<variable name="WallPlot">
		<value condition="!String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value>$VAR[MoviePlot]</value>
	</variable>
	
	<variable name="WallInfolabel">
		<value condition="Container.Content(TVShows)">$LOCALIZE[20360]:$INFO[ListItem.Property(TotalSeasons),[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[33054]:$INFO[ListItem.Episode,[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[345]:$INFO[ListItem.Year,[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[563]:$VAR[RatingType,[COLOR=MediaInfoItemColor2] ,[/COLOR]]</value>
		<value condition="ListItem.IsCollection">$VAR[MovieSetCount,$LOCALIZE[20342]: [COLOR=MediaInfoItemColor2],  &#x2022;  [/COLOR]]$VAR[RatingType,$LOCALIZE[563]: [COLOR=MediaInfoItemColor2],[/COLOR]]$VAR[SkinHelperDurationVar,[COLOR=MediaInfoItemColor2]  &#x2022;  [/COLOR]$LOCALIZE[2050]: [COLOR=MediaInfoItemColor2],[/COLOR]]</value>
		<value>$LOCALIZE[345]:$INFO[ListItem.Year,[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[2050]: [COLOR=MediaInfoItemColor2]$VAR[DurationVar]  &#x2022;  [/COLOR]$LOCALIZE[563]:$VAR[RatingType,[COLOR=MediaInfoItemColor2] ,[/COLOR]]</value>
	</variable>
	<!-- END INCLUDES -->
</includes>