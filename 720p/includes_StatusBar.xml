<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="NotificationIconVar">
		<value condition="Player.HasGame">gui/notification-game.png</value>
		<value condition="Player.HasVideo">gui/notification-video.png</value>
	</variable>
	
	<include name="Notifications">
		<control type="grouplist">
			<left>490</left>
			<top>StatusBartop</top>
			<height>43</height>
			<width>780</width>
			<itemgap>4</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="image" id="5555">
				<width>43</width>
				<height>43</height>
				<texture border="8">gui/notification-audio.png</texture>
				<bordersize>1</bordersize>
				<aspectratio>keep</aspectratio>
				<visible>Player.HasAudio + ![Window.IsActive(Home) + ![$EXP[AllInfoDialogs]]]</visible>
			</control>
			<control type="label" id="5556">
				<description>Audio Playing Line 1</description>
				<top>3</top>
				<width>210</width>
				<height>16</height>
				<font>NowPlayingFont</font>
				<textcolor>StatusBarColor</textcolor>
				<label>$VAR[MusicPlayingTitle]</label>
				<scroll>true</scroll>
				<scrollsuffix> - </scrollsuffix>
				<visible>Player.HasAudio + ![Window.IsActive(Home) + ![$EXP[AllInfoDialogs]]]</visible>
			</control>
			<control type="fadelabel" id="5557">
				<description>Audio Playing Line 2</description>
				<left>-214</left>
				<top>20</top>
				<width>210</width>
				<height>16</height>
				<font>NowPlayingFont</font>
				<textcolor>StatusBarColor2</textcolor>
				<label>$INFO[MusicPlayer.Artist]</label>
				<label>$INFO[MusicPlayer.Album]$INFO[MusicPlayer.Year, (,)]</label>
				<label>$INFO[MusicPlayer.Time] / $INFO[Player.Duration]</label>
				<scroll>true</scroll>
				<scrollout>false</scrollout>
				<pauseatend>1500</pauseatend>
				<resetonlabelchange>false</resetonlabelchange>
				<visible>Player.HasAudio + ![Window.IsActive(Home) + ![$EXP[AllInfoDialogs]]]</visible>
			</control>
			<control type="image" id="5558">
				<width>43</width>
				<height>43</height>
				<texture border="8">$VAR[NotificationIconVar]</texture>
				<bordersize>1</bordersize>
				<aspectratio>keep</aspectratio>
				<visible>[Player.HasVideo | Player.HasGame] + ![Window.IsActive(Home) + ![$EXP[AllInfoDialogs]]]</visible>
			</control>
			<control type="label" id="5559">
				<description>Video Playing Line 1</description>
				<top>2</top>
				<width>210</width>
				<height>16</height>
				<font>NowPlayingFont</font>
				<textcolor>StatusBarColor</textcolor>
				<label>$INFO[VideoPlayer.Title] $INFO[VideoPlayer.Year,(,)]</label>
				<scroll>true</scroll>
				<scrollsuffix> - </scrollsuffix>
				<visible>Player.HasVideo + ![Window.IsActive(Home) + ![$EXP[AllInfoDialogs]]]</visible>
			</control>
			<control type="fadelabel" id="5560">
				<description>Video Playing Line 2</description>
				<left>-214</left>
				<top>20</top>
				<width>210</width>
				<height>16</height>
				<font>NowPlayingFont</font>
				<textcolor>StatusBarColor2</textcolor>
				<label>$INFO[VideoPlayer.TVShowTitle]</label>
				<label>$INFO[VideoPlayer.Genre]</label>
				<label>$INFO[VideoPlayer.ChannelName]</label>
				<label>[B]$INFO[Player.Time] / $INFO[Player.Duration][/B]</label>
				<scroll>true</scroll>
				<scrollout>false</scrollout>
				<pauseatend>1500</pauseatend>
				<resetonlabelchange>false</resetonlabelchange>
				<visible>Player.HasVideo + ![Window.IsActive(Home) + ![$EXP[AllInfoDialogs]]]</visible>
			</control>
			<control type="button">
				<left>-267</left>
				<width>267</width>
				<height>43</height>
				<texturefocus />
				<texturenofocus />
				<onclick>ActivateWindow(PlayerControls)</onclick>
				<visible>Player.HasMedia + ![Window.IsActive(Home) + ![$EXP[AllInfoDialogs]]]</visible>
			</control>
			<control type="image">
				<width>6</width>
			</control>
			<control type="button" id="5562">
				<description>DVD</description>
				<top>6</top>
				<width>33</width>
				<height>33</height>
				<texturenofocus>gui/notification-media-dvd.png</texturenofocus>
				<texturefocus>gui/notification-media-dvd.png</texturefocus>
				<onclick>ActivateWindow(1123)</onclick>
				<visible>System.HasMediaDVD | System.HasMediaAudioCD</visible>
			</control>
			<control type="image" id="5563">
				<description>Volume</description>
				<width>128</width>
				<height>43</height>
				<texture border="8">gui/notification-volume.png</texture>
				<bordersize>1</bordersize>
				<aspectratio>keep</aspectratio>
				<visible>Window.IsActive(VolumeBar) + !Player.Muted</visible>
			</control>
			<control type="image" id="5564">
				<description>Volume Mute</description>
				<width>53</width>
				<height>43</height>
				<texture border="8">gui/notification-volume-mute.png</texture>
				<bordersize>1</bordersize>
				<aspectratio>keep</aspectratio>
				<visible>Player.Muted</visible>
			</control>
			<control type="progress" id="5565">
				<description>Volume Progress</description>
				<left>-86</left>
				<top>7</top>
				<width>73</width>
				<height>29</height>
				<info>Player.Volume</info>
				<texturebg border="5">controls/volume-slider-background.png</texturebg>
				<midtexture border="5">controls/volume-slider.png</midtexture>
				<visible>Window.IsActive(VolumeBar) + !Player.Muted</visible>
			</control>
			<control type="image">
				<width>3</width>
				<visible>Control.IsVisible(5563)</visible>
			</control>
			<include condition="Integer.IsLess(System.BatteryLevel,100) + Skin.HasSetting(EnableBatteryNotification)">BatteryNotification</include>
			<include condition="!String.IsEmpty(Weather.Plugin) + !Window.IsVisible(Weather) + [Skin.HasSetting(ApplyAllWeather) | [!Skin.HasSetting(ApplyAllWeather) + Window.IsActive(Home)]]">WeatherNotification</include>
			<include condition="!Skin.HasSetting(HideTopBarDate)">DateNotification</include>
			<control type="label" id="5569">
				<width min="25" max="100">auto</width>
				<height>43</height>
				<font>BreadCrumbFontBold</font>
				<textcolor>BreadCrumbColor</textcolor>
				<label> [UPPERCASE]$INFO[System.Time][/UPPERCASE]</label>
				<aligny>center</aligny>
			</control>
		</control>
	</include>
	
	<include name="DateNotification">
		<control type="label" id="5566">
			<width min="25" max="175">auto</width>
			<height>43</height>
			<font>BreadCrumbFont</font>
			<textcolor>BreadCrumbColor</textcolor>
			<label> [UPPERCASE]$INFO[System.Date(mmm)] $INFO[System.Date(d)], $INFO[System.Date(yyyy)][/UPPERCASE] </label>
			<aligny>center</aligny>
			<visible>!Skin.HasSetting(SkinDateFormat)</visible>
		</control>
		<control type="label" id="5566">
			<width min="25" max="175">auto</width>
			<height>43</height>
			<font>BreadCrumbFont</font>
			<textcolor>BreadCrumbColor</textcolor>
			<label> [UPPERCASE]$INFO[System.Date(d)] $INFO[System.Date(mmm)], $INFO[System.Date(yyyy)][/UPPERCASE] </label>
			<aligny>center</aligny>
			<visible>Skin.HasSetting(SkinDateFormat)</visible>
		</control>
		<control type="image">
			<top>3</top>
			<width>3</width>
			<height>39</height>
			<texture border="0,12,0,13">gui/status-bar-separator.png</texture>
		</control>
	</include>
	
	<include name="WeatherNotification">
		<include condition="!Skin.HasSetting(WeatherIconsAddon.multi)">WeatherNotificationIcon</include>
		<include condition="Skin.HasSetting(WeatherIconsAddon.multi)">WeatherAnimNotificationIcon</include>

		<control type="label" id="5568">
			<width min="25" max="250">auto</width>
			<height>43</height>
			<font>BreadCrumbFont</font>
			<textcolor>BreadCrumbColor</textcolor>
			<label> $INFO[Weather.Temperature] </label>
			<aligny>center</aligny>
			<visible>!String.IsEmpty(Weather.Conditions)</visible>
		</control>
		<control type="image">
			<top>3</top>
			<width>3</width>
			<height>39</height>
			<texture border="0,12,0,13">gui/status-bar-separator.png</texture>
			<visible>Control.IsVisible(5567) | Control.IsVisible(5568)</visible>
		</control>
	</include>
	
	<variable name="BatteryNotificationVar">
		<value condition="Integer.IsLessOrEqual(System.BatteryLevel,11)">gui/battery0.png</value>
		<value condition="Integer.IsLessOrEqual(System.BatteryLevel,40)">gui/battery33.png</value>
		<value condition="Integer.IsLessOrEqual(System.BatteryLevel,80)">gui/battery66.png</value>
		<value>gui/battery100.png</value>
	</variable>
	
	<include name="BatteryNotification">
		<control type="image">
			<animation effect="fade" end="65" condition="true">Conditional</animation>
			<animation effect="fade" start="15" end="65" pulse="true" time="700" condition="Integer.IsLessOrEqual(System.BatteryLevel,11)">Conditional</animation>
			<top>6</top>
			<width>30</width>
			<height>30</height>
			<texture>$VAR[BatteryNotificationVar]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(System.BatteryLevel)</visible>
		</control>
		
		<control type="image">
			<top>3</top>
			<width>3</width>
			<height>39</height>
			<texture border="0,12,0,13">gui/status-bar-separator.png</texture>
			<visible>!String.IsEmpty(System.BatteryLevel)</visible>
		</control>
	</include>
</includes>