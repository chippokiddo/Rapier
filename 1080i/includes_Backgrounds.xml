<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="FanartImageVar">
		<value condition="!String.IsEmpty(Container(584).ListItem.Art(fanart)) + [[Container.Content(Sets) + [!System.HasAddon(script.skin.helper.service) | [System.AddonIsEnabled(script.skin.helper.service) + [Control.HasFocus(584) | Control.HasFocus(151)]]]] | Container.Content(Genres) | Container.Content(Years) | Container.Content(Actors) | Container.Content(Directors) | Container.Content(Studios) | Container.Content(Countries) | Container.Content(Tags)]">$INFO[Container(584).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(561).ListItem.Art(fanart)) + [Control.HasFocus(561) | Control.HasFocus(151)]">$INFO[Container(561).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	
	<variable name="ExtraFanartImageVar">
		<value condition="String.Contains(Container.FolderPath,videodb://movies/genres/) | String.Contains(Container.FolderPath,videodb://movies/years/) | String.Contains(Container.FolderPath,videodb://movies/actors/) | String.Contains(Container.FolderPath,videodb://movies/directors/) | String.Contains(Container.FolderPath,videodb://movies/studios/) | String.Contains(Container.FolderPath,videodb://movies/countries/) | String.Contains(Container.FolderPath,videodb://movies/sets/) | String.Contains(Container.FolderPath,videodb://tvshows/genres/) | String.Contains(Container.FolderPath,videodb://tvshows/years/) | String.Contains(Container.FolderPath,videodb://tvshows/actors/) | String.Contains(Container.FolderPath,videodb://tvshows/studios/) | String.Contains(Container.FolderPath,videodb://musicvideos/genres/) | String.Contains(Container.FolderPath,videodb://musicvideos/years/) | String.Contains(Container.FolderPath,videodb://musicvideos/directors/) | String.Contains(Container.FolderPath,videodb://musicvideos/studios/) | String.Contains(Container.FolderPath,/tags/)">$INFO[Container(584).ListItem.Path,,extrafanart/]</value>
		<value>$INFO[ListItem.Path,,extrafanart/]</value>
	</variable>
	
	<variable name="ExtraFanartImage2Var">
		<value condition="!String.IsEmpty(ListItem.Season)">$INFO[ListItem.Path,,extrafanart/]</value>
		<value condition="!String.IsEmpty(ListItem(1).Season)">$INFO[ListItem(1).Path,,extrafanart/]</value>
		<value>$INFO[ListItem(2).Path,,extrafanart/]</value>
	</variable>
	
	<variable name="ExtraFanartImage3Var">
		<value condition="!String.IsEmpty(ListItem.Season)">$INFO[ListItem.Path,,../extrafanart/]</value>
		<value condition="!String.IsEmpty(ListItem(1).Season)">$INFO[ListItem(1).Path,,../extrafanart/]</value>
		<value>$INFO[ListItem(2).Path,,../extrafanart/]</value>
	</variable>
	
	<include name="BackgroundImagesContainer">
		<control type="list" id="$PARAM[id]">
			<left>2000</left>
			<autoscroll time="10000" delay="10000" repeat="10000">true</autoscroll>
			<visible>$PARAM[visible]</visible>
			<itemlayout />
			<focusedlayout />
			<content sortby="random" sortorder="ascending">$PARAM[content]</content>
		</control>
	</include>
	
	<include name="BackgroundImagesContainer2">
		<control type="list" id="$PARAM[id]">
			<left>2000</left>
			<autoscroll time="10000" delay="10000" repeat="10000">true</autoscroll>
			<visible>$PARAM[visible]</visible>
			<itemlayout />
			<focusedlayout />
			<content sortorder="dateadded" sortby="descending">$PARAM[content]</content>
		</control>
	</include>
	
	<include name="BackgroundImagesVideos">
		<control type="list" id="3561">
			<left>2000</left>
			<autoscroll time="10000" delay="10000" repeat="10000">true</autoscroll>
			<visible>Skin.String(CustomVideosBGType,4) + [Skin.String(CustomVideosFanartBGType,random) | String.IsEmpty(Skin.String(CustomVideosFanartBGType))]</visible>
			<itemlayout />
			<focusedlayout />
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://tvshows/titles/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://musicvideos/titles/</content>
		</control>
		<control type="list" id="3562">
			<left>2000</left>
			<autoscroll time="10000" delay="10000" repeat="10000">true</autoscroll>
			<visible>Skin.String(CustomVideosBGType,4) + Skin.String(CustomVideosFanartBGType,recent)</visible>
			<itemlayout />
			<focusedlayout />
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmovies/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedepisodes/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://recentlyaddedmusicvideos/</content>
		</control>
		<control type="list" id="3563">
			<left>2000</left>
			<autoscroll time="10000" delay="10000" repeat="10000">true</autoscroll>
			<visible>Skin.String(CustomVideosBGType,4) + Skin.String(CustomVideosFanartBGType,inprogress)</visible>
			<itemlayout />
			<focusedlayout />
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
			<content sortby="random" sortorder="ascending" limit="1">videodb://inprogresstvshows/</content>
		</control>
	</include>
	
	<include name="BackgroundImagesMovies">
		<include content="BackgroundImagesContainer">
			<param name="id" value="3550" />
			<param name="visible" value="Skin.String(CustomMoviesBGType,4) + [Skin.String(CustomMoviesFanartBGType,random) | String.IsEmpty(Skin.String(CustomMoviesFanartBGType))]" />
			<param name="content" value="videodb://movies/titles/" />
			<!-- full path
			<param name="content" value="videodb://movies/titles/?xsp=%7b%22group%22%3a%7b%22mixed%22%3afalse%2c%22type%22%3a%22none%22%7d%2c%22order%22%3a%7b%22direction%22%3a%22ascending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22random%22%7d%2c%22type%22%3a%22movies%22%7d" />
			-->
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="3551" />
			<param name="visible" value="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,recent)" />
			<param name="content" value="videodb://recentlyaddedmovies/" />
			<!-- full path
			<param name="content" value="videodb://movies/titles/?xsp=%7b%22group%22%3a%7b%22mixed%22%3afalse%2c%22type%22%3a%22none%22%7d%2c%22order%22%3a%7b%22direction%22%3a%22descending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22dateadded%22%7d%2c%22type%22%3a%22movies%22%7d" />
			-->
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="3552" />
			<param name="visible" value="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,inprogress)" />
			<param name="content" value="videodb://movies/titles/?xsp=%7b%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d" />
			<!-- full path
			<param name="content" value="videodb://movies/titles/?xsp=%7b%22order%22%3a%7b%22direction%22%3a%22descending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22lastplayed%22%7d%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d" />
			-->
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="3553" />
			<param name="visible" value="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,unwatched)" />
			<param name="content" value="videodb://movies/titles/?xsp=%7b%22group%22%3a%7b%22mixed%22%3afalse%2c%22type%22%3a%22none%22%7d%2c%22limit%22%3a50%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22playcount%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%220%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d" />
		</include>
	</include>
	
	<include name="BackgroundImagesTVShows">
		<include content="BackgroundImagesContainer">
			<param name="id" value="3554" />
			<param name="visible" value="Skin.String(CustomTVShowsBGType,4) + [Skin.String(CustomTVShowsFanartBGType,random) | String.IsEmpty(Skin.String(CustomTVShowsFanartBGType))]" />
			<param name="content" value="videodb://tvshows/titles/" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="3555" />
			<param name="visible" value="Skin.String(CustomTVShowsBGType,4) + Skin.String(CustomTVShowsFanartBGType,recent)" />
			<param name="content" value="videodb://recentlyaddedepisodes/" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="3556" />
			<param name="visible" value="Skin.String(CustomTVShowsBGType,4) + Skin.String(CustomTVShowsFanartBGType,inprogress)" />
			<param name="content" value="videodb://inprogresstvshows/" />
		</include>
	</include>
	
	<include name="BackgroundImagesMusic">
		<include content="BackgroundImagesContainer">
			<param name="id" value="3557" />
			<param name="visible" value="Skin.String(CustomMusicBGType,4) + [Skin.String(CustomMusicFanartBGType,random) | String.IsEmpty(Skin.String(CustomMusicFanartBGType))]" />
			<param name="content" value="musicdb://artists/" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="3558" />
			<param name="visible" value="Skin.String(CustomMusicBGType,4) + Skin.String(CustomMusicFanartBGType,recent)" />
			<param name="content" value="musicdb://recentlyaddedalbums/" />
		</include>
	</include>
	
	<include name="BackgroundImagesAddons">
		<include content="BackgroundImagesContainer">
			<param name="id" value="3564" />
			<param name="visible" value="Skin.String(CustomAddonsBGType,4)" />
			<param name="content" value="addons://user/all/" />
		</include>
	</include>
	
	<include name="BackgroundImagesCustomCategoryPlaylist">
		<include content="BackgroundImagesContainer">
			<param name="id" value="9051" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn1BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn1BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom1BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9051" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn1BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn1BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom1BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9052" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn2BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn2BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom2BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9052" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn2BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn2BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom2BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9053" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn3BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn3BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom3BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9053" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn3BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn3BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom3BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9054" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn4BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn4BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom4BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9054" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn4BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn4BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom4BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9055" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn5BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn5BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom5BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9055" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn5BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn5BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom5BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9056" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn6BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn6BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom6BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9056" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn6BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn6BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom6BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9057" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn7BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn7BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom7BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9057" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn7BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn7BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom7BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9058" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn8BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn8BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom8BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9058" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn8BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn8BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom8BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9059" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn9BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn9BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom9BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9059" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn9BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn9BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom9BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9060" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn10BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn10BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom10BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9060" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn10BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn10BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom10BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9061" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn11BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn11BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom11BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9061" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn11BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn11BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom11BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9062" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn12BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn12BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom12BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9062" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn12BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn12BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom12BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9063" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn13BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn13BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom13BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9063" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn13BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn13BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom13BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9064" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn14BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn14BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom14BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9064" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn14BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn14BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom14BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9065" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn15BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn15BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom15BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9065" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn15BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn15BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom15BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer">
			<param name="id" value="9066" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn16BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn16BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[590]))" />
			<param name="content" value="$INFO[Skin.String(Custom16BackgroundImagePath)]" />
		</include>
		<include content="BackgroundImagesContainer2">
			<param name="id" value="9066" />
			<param name="visible" value="Skin.String(AddMoreCategoryBtn16BackgroundImageType,fanart) + String.IsEqual(Skin.String(AddMoreCategoryBtn16BackgroundImagePathLabel),$LOCALIZE[31030] ($LOCALIZE[31924]))" />
			<param name="content" value="$INFO[Skin.String(Custom16BackgroundImagePath)]" />
		</include>
	</include>
	
	<variable name="GlobalBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(GlobalBrightnessValue))">$INFO[Skin.String(GlobalBrightnessValue)]</value>
		<value>50</value>
	</variable>
	
	<variable name="FanartBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(FanartBrightnessValue))">$INFO[Skin.String(FanartBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="MusicBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(MusicBrightnessValue))">$INFO[Skin.String(MusicBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="TVBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(TVBrightnessValue))">$INFO[Skin.String(TVBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="RadioBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(RadioBrightnessValue))">$INFO[Skin.String(RadioBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="VideosBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(VideosBrightnessValue))">$INFO[Skin.String(VideosBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="MoviesBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(MoviesBrightnessValue))">$INFO[Skin.String(MoviesBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="TVShowsBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(TVShowsBrightnessValue))">$INFO[Skin.String(TVShowsBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="AddonsBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(AddonsBrightnessValue))">$INFO[Skin.String(AddonsBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="GamesBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(GamesBrightnessValue))">$INFO[Skin.String(GamesBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="PicturesBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(PicturesBrightnessValue))">$INFO[Skin.String(PicturesBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="WeatherBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(WeatherBrightnessValue))">$INFO[Skin.String(WeatherBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<variable name="SystemBrightnessValueVar">
		<value condition="!String.IsEmpty(Skin.String(SystemBrightnessValue))">$INFO[Skin.String(SystemBrightnessValue)]</value>
		<value>30</value>
	</variable>
	
	<include name="BrightnessAnimations">
		<animation effect="fade" end="100" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),0)">Conditional</animation>
		<animation effect="fade" end="90" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),10)">Conditional</animation>
		<animation effect="fade" end="80" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),20)">Conditional</animation>
		<animation effect="fade" end="70" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),30) | String.IsEmpty(Skin.String($PARAM[type]))">Conditional</animation>
		<animation effect="fade" end="60" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),40)">Conditional</animation>
		<animation effect="fade" end="50" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),50)">Conditional</animation>
		<animation effect="fade" end="40" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),60)">Conditional</animation>
		<animation effect="fade" end="30" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),70)">Conditional</animation>
		<animation effect="fade" end="20" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),80)">Conditional</animation>
		<animation effect="fade" end="10" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),90)">Conditional</animation>
		<animation effect="fade" end="0" reversible="false" condition="String.IsEqual(Skin.String($PARAM[type]),100)">Conditional</animation>
	</include>
	
	<include name="GlobalBrightnessAnimations">
		<animation effect="fade" end="100" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),0)">Conditional</animation>
		<animation effect="fade" end="90" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),10)">Conditional</animation>
		<animation effect="fade" end="80" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),20)">Conditional</animation>
		<animation effect="fade" end="70" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),30)">Conditional</animation>
		<animation effect="fade" end="60" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),40)">Conditional</animation>
		<animation effect="fade" end="50" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),50) | String.IsEmpty(Skin.String(GlobalBrightnessValue))">Conditional</animation>
		<animation effect="fade" end="40" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),60)">Conditional</animation>
		<animation effect="fade" end="30" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),70)">Conditional</animation>
		<animation effect="fade" end="20" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),80)">Conditional</animation>
		<animation effect="fade" end="10" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),90)">Conditional</animation>
		<animation effect="fade" end="0" reversible="false" condition="String.IsEqual(Skin.String(GlobalBrightnessValue),100)">Conditional</animation>
	</include>
	
	<include name="FanartBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="FanartBrightnessValue" />
		</include>
	</include>
	
	<include name="MusicBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="MusicBrightnessValue" />
		</include>
	</include>
	
	<include name="TVBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="TVBrightnessValue" />
		</include>
	</include>
	
	<include name="RadioBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="RadioBrightnessValue" />
		</include>
	</include>
	
	<include name="VideosBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="VideosBrightnessValue" />
		</include>
	</include>
	
	<include name="MoviesBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="MoviesBrightnessValue" />
		</include>
	</include>
	
	<include name="TVShowsBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="TVShowsBrightnessValue" />
		</include>
	</include>
	
	<include name="AddonsBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="AddonsBrightnessValue" />
		</include>
	</include>
	
	<include name="GamesBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="GamesBrightnessValue" />
		</include>
	</include>
	
	<include name="PicturesBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="PicturesBrightnessValue" />
		</include>
	</include>
	
	<include name="WeatherBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="WeatherBrightnessValue" />
		</include>
	</include>
	
	<include name="SystemBrightnessAnimations">
		<include content="BrightnessAnimations">
			<param name="type" value="SystemBrightnessValue" />
		</include>
	</include>
	
	<include name="BackgroundLoginScreen">
		<control type="image">
			<depth>DepthBackground</depth>
			<include>BackgroundSize</include>
			<texture>background-default.png</texture>
			<aspectratio>scale</aspectratio>
			<fadetime>BackgroundCrossfadeTime</fadetime>
			<include>BackgroundVisibleAnim</include>
		</control>
	</include>
	
	<variable name="CustomWeatherBGVar">
		<value condition="Skin.String(CustomWeatherBGType,2) | Skin.String(CustomWeatherBGType,3)">$INFO[Skin.String(CustomWeatherBGPath)]</value>
		<value condition="Skin.String(CustomWeatherBGType,4)">$INFO[Skin.String(CustomWeatherBGPath)]$INFO[Window(Weather).Property(Current.FanartCode)]</value>
		<value condition="Skin.String(CustomWeatherBGType,5) + Skin.HasSetting(CustomWeatherBGPath.multi)">$INFO[Skin.String(CustomWeatherBGPath.path)]$INFO[Window(Weather).Property(Current.FanartCode)]</value>
		<value condition="Skin.String(CustomWeatherBGType,5) + !Skin.HasSetting(CustomWeatherBGPath.multi)">$INFO[Skin.String(CustomWeatherBGPath.path)]$INFO[Window(Weather).Property(Current.FanartCode),,.jpg]</value>
	</variable>
	
	<include name="BackgroundWeather">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomWeatherBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<include>WeatherBrightnessAnimations</include>
			</control>
		</control>
	</include>
	
	<include name="BackgroundDefault">
		<control type="group">
			<control type="multiimage">
				<include>BackgroundSize</include>
				<imagepath fallback="background-default.png">$INFO[Skin.String(CustomDefaultBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<include>GlobalBrightnessAnimations</include>
			</control>
		</control>
	</include>
	
	<variable name="BackgroundHomeVar">
		<value condition="!String.IsEmpty(Container(9050).ListItem.Art(fanart))">$INFO[Container(9050).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(850).ListItem.Thumb)">$INFO[Container(850).ListItem.Thumb]</value>
		<value condition="!String.IsEmpty(Skin.String(CustomDefaultBGPath))">$INFO[Skin.String(CustomDefaultBGPath)]</value>
		<value>background-default.png</value>
	</variable>

	<include name="BackgroundHome">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<include condition="Skin.String(CustomMoviesBGType,4)">BackgroundImagesMovies</include>
			<include condition="Skin.String(CustomTVShowsBGType,4)">BackgroundImagesTVShows</include>
			<include condition="Skin.String(CustomVideosBGType,4)">BackgroundImagesVideos</include>
			<include condition="Skin.String(CustomMusicBGType,4)">BackgroundImagesMusic</include>
			<include condition="Skin.String(CustomAddonsBGType,4)">BackgroundImagesAddons</include>
			<include condition="[Skin.HasSetting(EnableCustomCategory1) + Skin.String(AddMoreCategoryBtn1BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory2) + Skin.String(AddMoreCategoryBtn2BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory3) + Skin.String(AddMoreCategoryBtn3BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory4) + Skin.String(AddMoreCategoryBtn4BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory5) + Skin.String(AddMoreCategoryBtn5BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory6) + Skin.String(AddMoreCategoryBtn6BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory7) + Skin.String(AddMoreCategoryBtn7BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory8) + Skin.String(AddMoreCategoryBtn8BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory9) + Skin.String(AddMoreCategoryBtn9BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory10) + Skin.String(AddMoreCategoryBtn10BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory11) + Skin.String(AddMoreCategoryBtn11BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory12) + Skin.String(AddMoreCategoryBtn12BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory13) + Skin.String(AddMoreCategoryBtn13BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory14) + Skin.String(AddMoreCategoryBtn14BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory15) + Skin.String(AddMoreCategoryBtn15BackgroundImageType,fanart)] | [Skin.HasSetting(EnableCustomCategory16) + Skin.String(AddMoreCategoryBtn16BackgroundImageType,fanart)]">BackgroundImagesCustomCategoryPlaylist</include>

			<control type="multiimage">
				<include>BackgroundSize</include>
				<imagepath>$VAR[BackgroundHomeVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<animation effect="zoom" start="110" end="135" center="auto" time="15000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(AnimateBackground) + !String.IsEmpty(Container(850).ListItem.Thumb)">Conditional</animation>
				<animation effect="slide" end="-20,-20" delay="4000" time="8000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimateBackground) + !String.IsEmpty(Container(850).ListItem.Thumb)">Conditional</animation>
				<animation effect="slide" end="40,0" delay="10000" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimateBackground) + !String.IsEmpty(Container(850).ListItem.Thumb)">Conditional</animation>
			</control>
		</control>
	</include>
	
	<variable name="CustomMusicBGVar">
		<value condition="Skin.String(CustomMusicBGType,2) | Skin.String(CustomMusicBGType,3)">$INFO[Skin.String(CustomMusicBGPath)]</value>
		<value condition="Skin.String(CustomMusicBGType,4) + [Skin.String(CustomMusicFanartBGType,random) | String.IsEmpty(Skin.String(CustomMusicFanartBGType))] + !String.IsEmpty(Container(3557).ListItem.Art(artist.fanart))">$INFO[Container(3557).ListItem.Art(artist.fanart)]</value>
		<value condition="Skin.String(CustomMusicBGType,4) + [Skin.String(CustomMusicFanartBGType,random) | String.IsEmpty(Skin.String(CustomMusicFanartBGType))]">$INFO[Container(3557).ListItem.Art(fanart)]</value>
		<value condition="Skin.String(CustomMusicBGType,4) + Skin.String(CustomMusicFanartBGType,recent) + !String.IsEmpty(Container(3558).ListItem.Art(artist.fanart))">$INFO[Container(3558).ListItem.Art(artist.fanart)]</value>
		<value condition="Skin.String(CustomMusicBGType,4) + Skin.String(CustomMusicFanartBGType,recent)">$INFO[Container(3558).ListItem.Art(fanart)]</value>
	</variable>

	<include name="BackgroundMusic">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<include condition="Skin.String(CustomMusicBGType,4)">BackgroundImagesMusic</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomMusicBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<include condition="Skin.String(CustomMusicBGType,2) | Skin.String(CustomMusicBGType,3) | Skin.String(CustomMusicBGType,4)">MusicBackgroundDim</include>
		</control>
	</include>
	
	<variable name="CustomVideosBGVar">
		<value condition="Skin.String(CustomVideosBGType,2) | Skin.String(CustomVideosBGType,3)">$INFO[Skin.String(CustomVideosBGPath)]</value>
		<value condition="Skin.String(CustomVideosBGType,4) + [Skin.String(CustomVideosFanartBGType,random) | String.IsEmpty(Skin.String(CustomVideosFanartBGType))]">$INFO[Container(3561).ListItem.Art(fanart)]</value>
		<value condition="Skin.String(CustomVideosBGType,4) + Skin.String(CustomVideosFanartBGType,recent) + !String.IsEmpty(Container(3562).ListItem.Art(tvshow.fanart))">$INFO[Container(3562).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Skin.String(CustomVideosBGType,4) + Skin.String(CustomVideosFanartBGType,recent)">$INFO[Container(3562).ListItem.Art(fanart)]</value>
		<value condition="Skin.String(CustomVideosBGType,4) + Skin.String(CustomVideosFanartBGType,inprogress)">$INFO[Container(3563).ListItem.Art(fanart)]</value>
	</variable>

	<include name="BackgroundVideos">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<include condition="Skin.String(CustomVideosBGType,4)">BackgroundImagesVideos</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomVideosBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<include condition="Skin.String(CustomVideosBGType,2) | Skin.String(CustomVideosBGType,3) | Skin.String(CustomVideosBGType,4)">VideosBackgroundDim</include>
		</control>
	</include>
	
	<variable name="CustomMoviesBGVar">
		<value condition="Skin.String(CustomMoviesBGType,2) | Skin.String(CustomMoviesBGType,3)">$INFO[Skin.String(CustomMoviesBGPath)]</value>
		<value condition="Skin.String(CustomMoviesBGType,4) + [Skin.String(CustomMoviesFanartBGType,random) | String.IsEmpty(Skin.String(CustomMoviesFanartBGType))]">$INFO[Container(3550).ListItem.Art(fanart)]</value>
		<value condition="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,recent)">$INFO[Container(3551).ListItem.Art(fanart)]</value>
		<value condition="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,inprogress)">$INFO[Container(3552).ListItem.Art(fanart)]</value>
		<value condition="Skin.String(CustomMoviesBGType,4) + Skin.String(CustomMoviesFanartBGType,unwatched)">$INFO[Container(3553).ListItem.Art(fanart)]</value>
	</variable>

	<include name="BackgroundMovies">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>String.Contains(Container.FolderPath,/movies/)</visible>
			<include condition="Skin.String(CustomMoviesBGType,4)">BackgroundImagesMovies</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomMoviesBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<include condition="Skin.String(CustomMoviesBGType,2) | Skin.String(CustomMoviesBGType,3) | Skin.String(CustomMoviesBGType,4)">MoviesBackgroundDim</include>
		</control>
	</include>
	
	<variable name="CustomTVShowsBGVar">
		<value condition="Skin.String(CustomTVShowsBGType,2) | Skin.String(CustomTVShowsBGType,3)">$INFO[Skin.String(CustomTVShowsBGPath)]</value>
		<value condition="Skin.String(CustomTVShowsBGType,4) + [Skin.String(CustomTVShowsFanartBGType,random) | String.IsEmpty(Skin.String(CustomTVShowsFanartBGType))]">$INFO[Container(3554).ListItem.Art(fanart)]</value>
		<value condition="Skin.String(CustomTVShowsBGType,4) + Skin.String(CustomTVShowsFanartBGType,recent) + !String.IsEmpty(Container(3555).ListItem.Art(tvshow.fanart))">$INFO[Container(3555).ListItem.Art(tvshow.fanart)]</value>
		<value condition="Skin.String(CustomTVShowsBGType,4) + Skin.String(CustomTVShowsFanartBGType,recent)">$INFO[Container(3555).ListItem.Art(fanart)]</value>
		<value condition="Skin.String(CustomTVShowsBGType,4) + Skin.String(CustomTVShowsFanartBGType,inprogress)">$INFO[Container(3556).ListItem.Art(fanart)]</value>
	</variable>

	<include name="BackgroundTVShows">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>String.Contains(Container.FolderPath,/tvshows/) | Container.Content(Episodes)</visible>
			<include condition="Skin.String(CustomTVShowsBGType,4)">BackgroundImagesTVShows</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomTVShowsBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<include condition="Skin.String(CustomTVShowsBGType,2) | Skin.String(CustomTVShowsBGType,3) | Skin.String(CustomTVShowsBGType,4)">TVShowsBackgroundDim</include>
		</control>
	</include>
	
	<variable name="CustomAddonsBGVar">
		<value condition="Skin.String(CustomAddonsBGType,2) | Skin.String(CustomAddonsBGType,3)">$INFO[Skin.String(CustomAddonsBGPath)]</value>
		<value condition="Skin.String(CustomAddonsBGType,4) + !String.IsEmpty(Container(3564).ListItem.Art(fanart))">$INFO[Container(3564).ListItem.Art(fanart)]</value>
	</variable>

	<include name="BackgroundPrograms">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<include condition="Skin.String(CustomAddonsBGType,4)">BackgroundImagesAddons</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomAddonsBGVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<include>AddonsBrightnessAnimations</include>
			</control>
		</control>
	</include>

	<include name="BackgroundGames">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$INFO[Skin.String(CustomGamesBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<include>GamesBrightnessAnimations</include>
			</control>
		</control>
	</include>
	
	<variable name="CustomPicturesBGPath">
		<value condition="Skin.String(CustomPicturesBGType,2) | Skin.String(CustomPicturesBGType,3)">$INFO[Skin.String(CustomPicturesBGPath)]</value>
		<value condition="System.AddonIsEnabled(plugin.image.mypicsdb) + [Skin.String(CustomPicturesBGType,4) | Skin.String(CustomPicturesBGType,5)]">$INFO[Control.GetLabel(4165)]</value>
	</variable>
	
	<include name="BackgroundPictures">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$VAR[CustomPicturesBGPath]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<include>PicturesBrightnessAnimations</include>
			</control>
		</control>
	</include>

	<include name="BackgroundSystem">
		<control type="group">
			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$INFO[Skin.String(CustomSystemBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<include>SystemBrightnessAnimations</include>
			</control>
		</control>
	</include>
	
	<include name="BackgroundPVR">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$INFO[Skin.String(CustomPVRBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<include>TVBrightnessAnimations</include>
			</control>
		</control>
	</include>
	
	<include name="BackgroundPVRRadio">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>

			<control type="multiimage">
				<description>Custom Background</description>
				<include>BackgroundSize</include>
				<imagepath>$INFO[Skin.String(CustomPVRRadioBGPath)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<include condition="Skin.HasSetting(AnimateBackground)">BackgroundAnim</include>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<include>RadioBrightnessAnimations</include>
			</control>
		</control>
	</include>

	<include name="BackgroundMusicPlaying">
		<control type="group">
			<visible>Player.HasAudio</visible>
			<include>BackgroundVisibleAnim</include>
			
			<control type="visualisation" id="9010">
				<description>Visualization</description>
				<include>BackgroundSize</include>
				<visible>!SlideShow.IsActive</visible>
				<visible>[!Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + ![String.IsEqual(Visualisation.Name,spectrum) | String.IsEqual(Visualisation.Name,waveform)] + !String.IsEmpty(Visualisation.Name)</visible>
			</control>
			
			<include condition="[[Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + !Skin.HasSetting(EnableArtistFanartSlideshow)]
			| [[Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + !System.HasAddon(script.artistslideshow)]">MusicPlayingArtistFanart</include>
			<include condition="System.AddonIsEnabled(script.artistslideshow) + [Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + Skin.HasSetting(EnableArtistFanartSlideshow)">MusicPlayingArtistFanartSlideshow</include>
			<include condition="![Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + !Window.IsActive(Home)">MediaPlayingVizDim</include>
			<include condition="[Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + !Window.IsActive(Home)">MediaPlayingFanartDim</include>
			
			<control type="visualisation">
				<description>Visualization</description>
				<include>BackgroundSize</include>
				<visible>!SlideShow.IsActive</visible>
				<visible>[!Skin.HasSetting(UseFanartForMusicPlayingBG) | Skin.HasSetting(UseVisualizationAndFanartForMusicPlayingBG)] + [String.IsEqual(Visualisation.Name,spectrum) | String.IsEqual(Visualisation.Name,waveform)]</visible>
			</control>
		</control>
	</include>

	<include name="BackgroundVideoPlaying">
		<control type="group">
			<visible>Player.HasVideo</visible>
			<include>BackgroundVisibleAnim</include>

			<control type="videowindow">
				<description>Video</description>
				<include>BackgroundSize</include>
				<visible>!SlideShow.IsActive</visible>
			</control>

			<include condition="![Window.IsActive(Home) | Window.IsActive(TVGuide)]">MediaPlayingVizDim</include>
		</control>
	</include>

	<include name="BackgroundVideoFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG) | [[Player.HasAudio | [!Player.HasVideo + Skin.HasSetting(PlayTrailerWindowed)]] + Window.IsActive(MovieInformation)]]">IsMediaPlayingCondition</include>

			<control type="group">
				<visible>Container.Content(Movies) | Container.Content(Sets) | Window.IsActive(VideoPlaylist) | [Control.IsVisible(585) + [String.Contains(Container.FolderPath,videodb://movies/genres/) | String.Contains(Container.FolderPath,videodb://movies/years/) | String.Contains(Container.FolderPath,videodb://movies/actors/) | String.Contains(Container.FolderPath,videodb://movies/directors/) | String.Contains(Container.FolderPath,videodb://movies/studios/) | String.Contains(Container.FolderPath,videodb://movies/countries/) | String.Contains(Container.FolderPath,videodb://movies/tags/)]]</visible>
				<visible>[[Window.IsActive(MovieInformation) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(55)
				| Control.IsVisible(58) | Control.IsVisible(59) | Control.IsVisible(60) | Control.IsVisible(65) | Control.IsVisible(585) | Control.IsVisible(588)] + !Skin.HasSetting(EnableMoviesFanart)]
				| [Control.IsVisible(580) + !Skin.HasSetting(EnableVideoPlaylistFanart)]
				| Control.IsVisible(59)</visible>
				<include>BackgroundVisibleAnim</include>
				<include>FanartImage</include>
				<include condition="Skin.HasSetting(EnableMoviesExtraFanart)">ExtraFanartImage</include>
				<include>FanartDim</include>
			</control>
			
			<control type="group">
				<visible>Container.Content(MusicVideos) | Window.IsActive(VideoPlaylist) | [Control.IsVisible(585) + [String.Contains(Container.FolderPath,videodb://musicvideos/genres/) | String.Contains(Container.FolderPath,videodb://musicvideos/years/) | String.Contains(Container.FolderPath,videodb://musicvideos/directors/) | String.Contains(Container.FolderPath,videodb://musicvideos/studios/) | String.Contains(Container.FolderPath,videodb://musicvideos/tags/)]]</visible>
				<visible>[[Window.IsActive(MovieInformation) | Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(585)
				| Control.IsVisible(59)] + !Skin.HasSetting(EnableMusicVideosFanart)]
				| [Control.IsVisible(580) + !Skin.HasSetting(EnableVideoPlaylistFanart)]</visible>
				<include>BackgroundVisibleAnim</include>
				<include>FanartImage</include>
				<include condition="Skin.HasSetting(EnableMusicVideosExtraFanart)">ExtraFanartImage</include>
				<include>FanartDim</include>
			</control>

			<control type="group">
				<visible>[[Window.IsActive(MovieInformation) | Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(54)
				| Control.IsVisible(58) | Control.IsVisible(59) | Control.IsVisible(60) | Control.IsVisible(65) | Control.IsVisible(53) | Control.IsVisible(55) | Control.IsVisible(585) | Control.IsVisible(586) | Control.IsVisible(588)] + !Skin.HasSetting(EnableTVShowsFanart)]
				| [Control.IsVisible(580) + !Skin.HasSetting(EnableVideoPlaylistFanart)]</visible>
				<control type="group">
					<visible>Container.Content(TVShows) | [Control.IsVisible(585) + [String.Contains(Container.FolderPath,videodb://tvshows/genres/) | String.Contains(Container.FolderPath,videodb://tvshows/years/) | String.Contains(Container.FolderPath,videodb://tvshows/actors/) | String.Contains(Container.FolderPath,videodb://tvshows/studios/) | String.Contains(Container.FolderPath,videodb://tvshows/tags/)]]</visible>
					<include>BackgroundVisibleAnim</include>
					<include>FanartImage</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage</include>
					<include>FanartDim</include>
				</control>
				<control type="group">
					<visible>Container.Content(Episodes) | Container.Content(Seasons) | Window.IsActive(VideoPlaylist)</visible>
					<include>BackgroundVisibleAnim</include>
					<include>FanartImage</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage2</include>
					<include condition="Skin.HasSetting(EnableTVShowsExtraFanart)">ExtraFanartImage3</include>
					<include>FanartDim</include>
				</control>
			</control>
			
			<control type="group">
				<visible>Container.Content(Videos)</visible>
				<visible>[Window.IsActive(MovieInformation) | Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(530) | Control.IsVisible(531) | Control.IsVisible(532)] + !Skin.HasSetting(EnableVideosFanart)</visible>
				<include>BackgroundVisibleAnim</include>
				<include>FanartImage</include>
				<include>FanartDim</include>
			</control>
			
			<control type="group">
				<visible>Window.IsActive(MyPVRRecordings.xml)</visible>
				<visible>[Control.IsVisible(50) | Window.IsActive(DialogPVRInfo.xml)] + !Skin.HasSetting(EnablePVRFanart)</visible>
				<include>BackgroundVisibleAnim</include>
				<include>FanartImage</include>
				<include>FanartDim</include>
			</control>
		</control>
	</include>

	<include name="BackgroundMusicFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>$EXP[AlbumsSongsArtists] | Window.IsActive(MusicPlaylist) | [Control.IsVisible(585) + [String.Contains(Container.FolderPath,musicdb://genres/) | String.Contains(Container.FolderPath,musicdb://years/)]]</visible>
			<visible>[[Window.IsActive(DialogMusicInfo.xml) | Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(58) | Control.IsVisible(63) | Control.IsVisible(53) | Control.IsVisible(55)
			| Control.IsVisible(59) | Control.IsVisible(60) | Control.IsVisible(72) | Control.IsVisible(585) | Control.IsVisible(586) | Control.IsVisible(65)] + !Skin.HasSetting(EnableMusicFanart)]
			| [Control.IsVisible(580) + !Skin.HasSetting(EnableMusicPlaylistFanart)]</visible>
			<include>BackgroundVisibleAnim</include>
			<include>FanartImage</include>
			<include>FanartDim</include>
		</control>
	</include>

	<include name="BackgroundAddonsFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>Container.Content(Addons) | Window.IsActive(1116)</visible>
			<visible>[Window.IsActive(AddonInformation) | Control.IsVisible(52) | Control.IsVisible(58) | Control.IsVisible(63) | Control.IsVisible(93) | Control.IsVisible(561)] + !Skin.HasSetting(EnableAddonsFanart)</visible> 
			<include>BackgroundVisibleAnim</include>
			<include>FanartImage</include>
			<include>FanartDim</include>
		</control>
	</include>

	<include name="BackgroundProgramsFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>String.Contains(Container.FolderPath,plugin://plugin.program)</visible>
			<visible>[Window.IsActive(1122) | Control.IsVisible(59) | Control.IsVisible(65) | Control.IsVisible(53)] + !Skin.HasSetting(EnableProgramsFanart)</visible>
			<include>BackgroundVisibleAnim</include>
			<include>FanartImage</include>
			<include>FanartDim</include>
		</control>
	</include>
	
	<variable name="BackgroundGenreFanartVar">
		<value condition="String.Contains(Container.FolderPath,videodb://musicvideos/genres/) | Window.IsActive(Music)">$INFO[Skin.String(MusicGenreFanartAddon.path)]$INFO[ListItem.Label,,.jpg]</value>
		<value condition="Window.IsActive(Videos)">$INFO[Skin.String(MovieGenreFanartAddon.path)]$INFO[ListItem.Label,,.jpg]</value>
	</variable>
	
	<include name="BackgroundGenreFanart">
		<control type="group">
			<include condition="![Skin.HasSetting(DisableMusicPlayingBG) | Skin.HasSetting(DisableVideoPlayingBG)]">IsMediaPlayingCondition</include>
			<visible>![Control.HasFocus(151) | Control.HasFocus(584) | ListItem.IsParentFolder]</visible>
			<include>BackgroundVisibleAnim</include>
			<control type="image">
				<include>BackgroundSize</include>
				<texture background="true">$VAR[BackgroundGenreFanartVar]</texture>
				<aspectratio>scale</aspectratio>
				<fadetime>FanartCrossfadeTime</fadetime>
				<include condition="Skin.HasSetting(AnimateFanart)">BackgroundAnim</include>
			</control>
			<include>FanartDim</include>
		</control>
	</include>
	
	<variable name="BackgroundGlobalSearchVar">
		<value condition="!String.IsEmpty(Container.ListItem.Art(tvshow.fanart))">$INFO[Container.ListItem.Art(tvshow.fanart)]</value>
		<value>$INFO[Container.ListItem.Art(fanart)]</value>
	</variable>
	
	<include name="BackgroundGlobalSearch">
		<control type="group">
			<control type="image">
				<description>Fanart Background</description>
				<include>BackgroundSize</include>
				<texture background="true">$VAR[BackgroundGlobalSearchVar]</texture>
				<aspectratio>scale</aspectratio>
				<fadetime>BackgroundCrossfadeTime</fadetime>
				<visible>![String.IsEmpty(Container.ListItem.Art(fanart)) + String.IsEmpty(Container.ListItem.Art(tvshow.fanart))]</visible>
			</control>

			<control type="image">
				<include>BackgroundDim</include>
				<animation effect="fade" end="80" reversible="false" condition="true">Conditional</animation>
			</control>
		</control>
	</include>

	<include name="FanartImage">
		<control type="image">
			<include>BackgroundSize</include>
			<texture background="true">$VAR[FanartImageVar]</texture>
			<aspectratio>scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
			<include condition="Skin.HasSetting(AnimateFanart)">BackgroundAnim</include>
			<visible>!String.IsEmpty(ListItem.Art(fanart)) | !String.IsEmpty(ListItem.Art(tvshow.fanart)) | !String.IsEmpty(Container(561).ListItem.Art(fanart)) | !String.IsEmpty(Container(584).ListItem.Art(fanart))</visible>
		</control>
	</include>

	<include name="ExtraFanartImage">
		<control type="multiimage">
			<include>BackgroundSize</include>
			<imagepath background="true">$VAR[ExtraFanartImageVar]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<include condition="Skin.HasSetting(AnimateFanart)">BackgroundAnim</include>
		</control>
	</include>

	<include name="ExtraFanartImage2">
		<control type="multiimage">
			<include>BackgroundSize</include>
			<imagepath background="true">$VAR[ExtraFanartImage2Var]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<include condition="Skin.HasSetting(AnimateFanart)">BackgroundAnim</include>
		</control>
	</include>
	
	<include name="ExtraFanartImage3">
		<control type="multiimage">
			<include>BackgroundSize</include>
			<imagepath background="true">$VAR[ExtraFanartImage3Var]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<include condition="Skin.HasSetting(AnimateFanart)">BackgroundAnim</include>
		</control>
	</include>

	<include name="BackgroundDim">
		<include>BackgroundSize</include>
		<texture>views/fanart-dim.png</texture>
	</include>

	<include name="MediaPlayingVizDim">
		<control type="image">
			<include>BackgroundDim</include>
		</control>
	</include>

	<include name="MediaPlayingFanartDim">
		<control type="image">
			<include>BackgroundDim</include>
			<visible>!String.IsEmpty(Player.Art(fanart))</visible>
			<include>FanartBrightnessAnimations</include>
		</control>
	</include>

	<include name="FanartDim">
		<control type="image">
			<include>BackgroundDim</include>
			<visible>!String.IsEmpty(ListItem.Art(fanart)) | !String.IsEmpty(Container(561).ListItem.Art(fanart)) | !String.IsEmpty(Container(584).ListItem.Art(fanart))</visible>
			<include>FanartBrightnessAnimations</include>
		</control>
	</include>

	<include name="MusicBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<include>MusicBrightnessAnimations</include>
		</control>
	</include>

	<include name="VideosBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<include>VideosBrightnessAnimations</include>
		</control>
	</include>

	<include name="MoviesBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<include>MoviesBrightnessAnimations</include>
		</control>
	</include>

	<include name="TVShowsBackgroundDim">
		<control type="image">
			<include>BackgroundDim</include>
			<include>TVShowsBrightnessAnimations</include>
		</control>
	</include>

	<include name="IsMediaPlayingCondition">
		<visible>!Player.HasMedia</visible>
	</include>
	
	<include name="MusicPlayingArtistFanart">
		<control type="image">
			<include>ScreenSize</include>
			<texture>$INFO[Player.Art(fanart)]</texture>
			<aspectratio>scale</aspectratio>
			<animation effect="fade" start="100" end="40" condition="Control.IsVisible(9010)">Conditional</animation>
			<include condition="Skin.HasSetting(AnimateFanartMusicPlayingBG)">BackgroundAnim</include>
		</control>
	</include>
	
	<variable name="MusicPlayingArtistFanartSlideshowVar">
		<value condition="!String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady))">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</value>
		<value condition="!String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))">$INFO[Window(Visualisation).Property(ArtistSlideshow.Image)]</value>
		<value condition="!String.IsEmpty(Player.Art(artist.fanart))">$INFO[Player.Art(artist.fanart)]</value>
		<value>$INFO[Player.Art(fanart)]</value>
	</variable>
	
	<include name="MusicPlayingArtistFanartSlideshow">
		<control type="multiimage">
			<include>BackgroundSize</include>
			<imagepath>$VAR[MusicPlayingArtistFanartSlideshowVar]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>BackgroundCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<animation effect="fade" start="0" end="100" time="300">VisibleChange</animation>
			<animation effect="fade" start="100" end="40" condition="Control.IsVisible(9010)">Conditional</animation>
			<include condition="Skin.HasSetting(AnimateFanartMusicPlayingBG)">BackgroundAnim</include>
		</control>
	</include>
	
	<include name="MyPicsDBFadelabels">
		<control type="fadelabel" id="4165">
			<pauseatend>7000</pauseatend>
			<left>1500</left>
			<font>font13</font>
			<textcolor>00FFFFFF</textcolor>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.1.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.2.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.3.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.4.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.5.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.6.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.7.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.8.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.9.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.10.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.11.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.12.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.13.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.14.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.15.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.16.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.17.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.18.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.19.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBLatest.20.Path)]</label>
			<visible>Skin.String(CustomPicturesBGType,4)</visible>
		</control>
		
		<control type="fadelabel" id="4165">
			<pauseatend>7000</pauseatend>
			<left>1500</left>
			<font>font13</font>
			<textcolor>00FFFFFF</textcolor>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.1.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.2.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.3.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.4.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.5.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.6.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.7.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.8.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.9.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.10.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.11.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.12.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.13.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.14.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.15.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.16.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.17.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.18.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.19.Path)]</label>
			<label>$INFO[Window(Home).Property(MyPicsDBRandom.20.Path)]</label>
			<visible>Skin.String(CustomPicturesBGType,5)</visible>
		</control>
	</include>
</includes>