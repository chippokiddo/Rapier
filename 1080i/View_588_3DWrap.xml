<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!--//// START 3D WRAP VIEW ////////////////////////////////////////////////////////////////////////////-->	
	<include name="3DWrapView">
		<control type="group" id="500">
		    <defaultcontrol always="true">588</defaultcontrol>
			<visible>Control.IsVisible(588)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="image">
				<description>Background Glow</description>
				<left>-50</left>
				<top>500</top>
				<width>1380</width>
				<height>345</height>
				<texture>gui/background-glow.png</texture>
				<animation effect="fade" end="22" condition="true">Conditional</animation>
			</control>

			<control type="image">
				<left>30</left>
				<top>92</top>
				<width>1220</width>
				<height>346</height>
				<texture border="7">panels/content-panel.png</texture>
				<include>PanelFadeAnim</include>
				<include>ControlsOpenCloseAnim</include>
			</control>
			
			<control type="group">
				<left>35</left>
				<top>97</top>
				
				<control type="image">
					<description>Content Background Left</description>
					<width>603</width>
					<height>336</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<description>Content Background Right</description>
					<left>606</left>
					<width>604</width>
					<height>336</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="group">
					<visible>!String.IsEmpty(ListItem.Title)</visible>
					<include>BackgroundVisibleAnim</include>
					<left>6</left>
					
					<control type="image">
						<description>Media Info Background Title / Clearlogo</description>
						<top>6</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					</control>
					
					<control type="image">
						<description>Media Info Background</description>
						<top>77</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					</control>
					
					<control type="image">
						<description>Media Info Background</description>
						<top>148</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>Container.Content(TVShows) + System.AddonIsEnabled(plugin.video.themoviedb.helper) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					</control>
					
					<control type="image">
						<description>Description Background</description>
						<top>148</top>
						<width>590</width>
						<height>182</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>![Container.Content(TVShows) + System.HasAddon(plugin.video.themoviedb.helper) + !Skin.HasSetting(EnableNextAiredInfo)]</visible>
					</control>
					
					<control type="image">
						<description>Description Background</description>
						<top>219</top>
						<width>590</width>
						<height>111</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>Container.Content(TVShows) + System.AddonIsEnabled(plugin.video.themoviedb.helper) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					</control>
				</control>
			</control>
			
			<control type="wraplist" id="588">
				<viewtype label="31121">bigwrap</viewtype>
				<left>10</left>
				<top>442</top>
				<width>1260</width>
				<height>300</height>
				<onleft>588</onleft>
				<onright>588</onright>
				<onup>850</onup>
				<ondown>150</ondown>
				<pagecontrol>929</pagecontrol>
				<orientation>horizontal</orientation>
				<focusposition>4</focusposition>
				<scrolltime>250</scrolltime>
				<visible>Container.Content(Movies) | Container.Content(Sets) | Container.Content(TVShows)</visible>
				<itemlayout width="136">
					<control type="group">
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.String(3DWrapMoviesStyle,2)] | [Container.Content(TVShows) + Skin.String(3DWrapTVShowsStyle,2)]</visible>
						<control type="group">
							<include>MissingVideoFadeAnim</include>
							<control type="image">
								<description>Cover Icon BG</description>
								<top>8</top>
								<width>126</width>
								<height>178</height>
								<texture diffuse="covers/3dwrap-poster-diffuse.png">dim.png</texture>
								<include>CoverDimAnim2</include>
								<visible>String.IsEmpty(ListItem.Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<width>126</width>
								<height>178</height>
								<texture background="true">$INFO[ListItem.ActualIcon]</texture>
								<aspectratio>keep</aspectratio>
								<include>InfoPaneLabelFadeAnim</include>
								<visible>String.IsEmpty(ListItem.Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover</description>
								<left>-8</left>
								<width>142</width>
								<height>194</height>
								<texture diffuse="covers/3dwrap-poster-diffuse.png" background="true">$VAR[PosterThumb]</texture>
								<aspectratio>stretch</aspectratio>
								<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
								<bordersize>8</bordersize>
							</control>
							<control type="image">
								<description>Cover Reflection</description>
								<top>188</top>
								<width>126</width>
								<height>178</height>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[PosterThumb]</texture>
								<aspectratio aligny="top">stretch</aspectratio>
							</control>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<top>8</top>
							<width>126</width>
							<height>178</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
						</control>
						<control type="image">
							<description>Cover Overlay Reflection</description>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
						</control>
						<control type="image">
							<left>89</left>
							<top>15</top>
							<width>26</width>
							<height>26</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>89</left>
							<top>15</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="fade" end="90" condition="true">Conditional</animation>
							<visible>[Container.Content(Movies) | Container.Content(Sets)] + ListItem.IsResumable + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMovies3DWrapOverlay)</visible>
						</control>
						<include>3DWrapTVShowOverlays</include>
					</control>
				</itemlayout>
				<focusedlayout width="180">
					<control type="group">
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.String(3DWrapMoviesStyle,2)] | [Container.Content(TVShows) + Skin.String(3DWrapTVShowsStyle,2)]</visible>
						<depth>DepthContent+</depth>
						<control type="group">
							<include>MissingVideoFadeAnim</include>
							<control type="image">
								<description>Cover Icon</description>
								<left>22</left>
								<top>8</top>
								<width>126</width>
								<height>178</height>
								<texture diffuse="covers/3dwrap-poster-diffuse.png">dim.png</texture>
								<include>CoverDimAnim2</include>
								<include>3DViewFocusAnim</include>
								<visible>String.IsEmpty(ListItem.Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<left>5</left>
								<width>126</width>
								<height>178</height>
								<texture background="true">$INFO[ListItem.ActualIcon]</texture>
								<aspectratio>keep</aspectratio>
								<animation effect="zoom" end="130" center="8,20" tween="back" easing="out" time="300" delay="100">Focus</animation>
								<animation effect="zoom" start="130" end="100" center="8,20" time="150">UnFocus</animation>
								<visible>String.IsEmpty(ListItem.Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover</description>
								<left>14</left>
								<width>142</width>
								<height>194</height>
								<texture diffuse="covers/3dwrap-poster-diffuse.png" background="true">$VAR[PosterThumb]</texture>
								<aspectratio>stretch</aspectratio>
								<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
								<bordersize>8</bordersize>
								<include>3DViewFocusAnim</include>
							</control>
							<control type="image">
								<description>Cover Reflection</description>
								<left>22</left>
								<top>188</top>
								<width>126</width>
								<height>178</height>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[PosterThumb]</texture>
								<aspectratio aligny="top">stretch</aspectratio>
								<include>3DViewFocusAnim</include>
							</control>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<left>22</left>
							<top>8</top>
							<width>126</width>
							<height>178</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<include>3DViewFocusAnim</include>
						</control>
						<control type="image">
							<description>Cover Overlay Reflection</description>
							<left>22</left>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<include>3DViewFocusAnim</include>
						</control>
						<control type="image">
							<left>115</left>
							<top>14</top>
							<width>26</width>
							<height>26</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
							<include>3DViewFocusAnim</include>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>115</left>
							<top>14</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>[Container.Content(Movies) | Container.Content(Sets)] + ListItem.IsResumable + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMovies3DWrapOverlay)</visible>
						</control>
						<include>3DWrapTVShowOverlays</include>
					</control>
				</focusedlayout>
			</control>
		
			<control type="image">
				<description>Fanart</description>
				<left>647</left>
				<top>103</top>
				<width>592</width>
				<height>324</height>
				<align>left</align>
				<texture background="true" diffuse="covers/list-info-3-fanart-diffuse.png">$VAR[3DWrapFanart]</texture>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<fadetime>FanartCrossfadeTime</fadetime>
			</control>
			
			<control type="image">
				<left>647</left>
				<top>70</top>
				<width>592</width>
				<height>324</height>
				<texture background="true">home-movies-icon.png</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<include>BackgroundVisibleAnim</include>
				<visible>String.IsEmpty(ListItem.Art(fanart)) + [Container.Content(Movies) | Container.Content(Sets)]</visible>
			</control>
			
			<control type="image">
				<left>647</left>
				<top>50</top>
				<width>592</width>
				<height>335</height>
				<texture background="true">home-tvshows-icon.png</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<include>BackgroundVisibleAnim</include>
				<visible>String.IsEmpty(ListItem.Art(fanart)) + Container.Content(TVShows)</visible>
			</control>
			
			<control type="multiimage">
				<left>647</left>
				<top>103</top>
				<width>592</width>
				<height>324</height>
				<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path,,extrafanart/]</imagepath>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>FanartCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(Enable3DWrapMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(Enable3DWrapTVShowsSmallExtraFanart)]</visible>
			</control>
			
			<control type="image">
				<description>Genre Background</description>
				<left>655</left>
				<top>394</top>
				<width>578</width>
				<height>27</height>
				<texture border="8">views/genre-background.png</texture>
				<include>ControlsOpenCloseAnim</include>
				<include>BackgroundVisibleAnim</include>
				<visible>!String.IsEmpty(ListItem.Genre) | ListItem.IsCollection</visible>
				<visible>![[Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
			</control>
			
			<control type="label">
				<description>Genre</description>
				<left>655</left>
				<top>396</top>
				<width>578</width>
				<font>MediaInfoFont3</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>center</align>
				<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
				<scroll>true</scroll>
				<include>BackgroundVisibleAnim</include>
				<visible>!String.IsEmpty(ListItem.Genre) | ListItem.IsCollection</visible>
				<visible>![[Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
			</control>

			<control type="group">
				<description>Info Dialog Box Area</description>
				<left>50</left>
				<visible>!Container.OnNext + !Container.OnPrevious + !String.IsEmpty(ListItem.Title)</visible>
				<include>ControlsOpenCloseAnim</include>
				<include>BackgroundVisibleAnim</include>
				
				<control type="image">
					<top>106</top>
					<width>572</width>
					<height>60</height>
					<align>center</align>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<fadetime>IconCrossfadeTime</fadetime>
					<visible>!String.IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableVideosClearLogo)</visible>
				</control>
				
				<control type="label">
					<description>Title</description>
					<top>117</top>
					<width>571</width>
					<align>center</align>
					<font>FullMediaInfoTitleFont</font>
					<textcolor>MediaInfoTitleColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
					<scroll>true</scroll>
					<visible>String.IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableVideosClearLogo)</visible>
				</control>
				
				<control type="group">
					<control type="group">
						<visible>Container.Content(Movies) | Container.Content(Sets)</visible>
						<control type="grouplist">
							<description>Director</description>
							<visible>!ListItem.IsCollection</visible>
							<top>184</top>
							<width>400</width>
							<orientation>horizontal</orientation>
							<include content="ExtendedListGrouplistContent">
								<param name="label" value="$LOCALIZE[20339]" />
								<param name="width" value="250" />
								<param name="info" value="$INFO[ListItem.Director]" />
								<param name="visible" value="true" />
							</include>
						</control>
						
						<control type="grouplist">
							<description>Movies</description>
							<visible>ListItem.IsCollection</visible>
							<top>184</top>
							<width>400</width>
							<orientation>horizontal</orientation>
							<include content="ExtendedListGrouplistContent">
								<param name="label" value="$LOCALIZE[20342]" />
								<param name="width" value="110" />
								<param name="info" value="$VAR[MovieSetCount]" />
								<param name="visible" value="true" />
							</include>
						</control>
					
						<control type="grouplist">
							<description>Runtime</description>
							<top>208</top>
							<width>289</width>
							<orientation>horizontal</orientation>
							<include content="ExtendedListGrouplistContent">
								<param name="label" value="$LOCALIZE[2050]" />
								<param name="width" value="179" />
								<param name="info" value="$VAR[DurationVar]" />
								<param name="visible" value="true" />
							</include>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Year</description>
						<left>162</left>
						<top>184</top>
						<width>410</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<include content="ExtendedListGrouplistContent">
							<param name="label" value="$LOCALIZE[345]" />
							<param name="width" value="400" />
							<param name="info" value="$VAR[MovieYear]" />
							<param name="visible" value="true" />
						</include>
					</control>
					
					<control type="grouplist">
						<description>Rating</description>
						<left>268</left>
						<top>208</top>
						<width>304</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<include content="ExtendedListGrouplistContent">
							<param name="label" value="$LOCALIZE[563]" />
							<param name="width" value="179" />
							<param name="info" value="$VAR[3DWrapRatingVar]" />
							<param name="visible" value="true" />
						</include>
					</control>
				</control>
				
				<control type="group">
					<visible>Container.Content(TVShows)</visible>
					<control type="grouplist">
						<description>Seasons</description>
						<top>184</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<include content="ExtendedListGrouplistContent">
							<param name="label" value="$LOCALIZE[33054]" />
							<param name="width" value="250" />
							<param name="info" value="$VAR[SeasonsPropertyVar]" />
							<param name="visible" value="true" />
						</include>
					</control>
				
					<control type="grouplist">
						<description>Episodes</description>
						<top>208</top>
						<width>289</width>
						<orientation>horizontal</orientation>
						<include content="ExtendedListGrouplistContent">
							<param name="label" value="$LOCALIZE[20360]" />
							<param name="width" value="179" />
							<param name="info" value="$INFO[ListItem.Episode]" />
							<param name="visible" value="true" />
						</include>
					</control>
				</control>
				
				<control type="group">
					<visible>System.AddonIsEnabled(plugin.video.themoviedb.helper) + Container.Content(TVShows) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<control type="grouplist">
						<description>Latest Episode</description>
						<top>255</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31966]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$VAR[TheMovieDBHelperLastVar]$INFO[Container(5055).ListItem.Property(Last_Aired.Name),. ,]$INFO[Container(5055).ListItem.Property(Last_Aired), (,)]</label>
						</control>
					</control>
				
					<control type="grouplist">
						<description>Next Episode</description>
						<visible>!String.IsEmpty(Container(5055).ListItem.Property(Next_Aired))</visible>
						<top>279</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31967]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$VAR[TheMovieDBHelperNextVar]$INFO[Container(5055).ListItem.Property(Next_Aired.Name),. ,]$INFO[Container(5055).ListItem.Property(Next_Aired), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next Episode</description>
						<visible>String.IsEmpty(Container(5055).ListItem.Property(Next_Aired))</visible>
						<top>279</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20416]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Premiered]</label>
						</control>
					</control>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<top>255</top>
					<width>571</width>
					<height>164</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$VAR[MoviePlot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>![Container.Content(TVShows) + System.HasAddon(plugin.video.themoviedb.helper) + !Skin.HasSetting(EnableNextAiredInfo)]</visible>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<top>326</top>
					<width>571</width>
					<height>93</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>Container.Content(TVShows) + System.AddonIsEnabled(plugin.video.themoviedb.helper) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
			</control>
			
			<control type="group">
				<visible>[[Container.Content(Movies) | Container.Content(Sets)] + [String.IsEmpty(Skin.String(3DWrapMoviesStyle)) | Skin.String(3DWrapMoviesStyle,1)]] | [Container.Content(TVShows) + [String.IsEmpty(Skin.String(3DWrapTVShowsStyle)) | Skin.String(3DWrapTVShowsStyle,1)]]</visible>
				<control type="group" id="5051">
					<depth>Depth3DWrapPosters</depth>
					<top>367</top>
					<camera x="640" y="540" />
					<visible>Control.IsVisible(588) + Container.OnNext</visible>
					<animation effect="slide" end="-70,0" time="250" reversible="false">Hidden</animation>
					<control type="group">
						<left>104</left>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,16)" />
							<param name="position" value="-8" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,14)" />
							<param name="position" value="-7" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,12)" />
							<param name="position" value="-6" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,10)" />
							<param name="position" value="-5" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,8)" />
							<param name="position" value="-4" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,6)" />
							<param name="position" value="-3" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>524</left>
						<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,4)" />
							<param name="position" value="-2" />
							<param name="number" value="1" />
						</include>
					</control>
					
					<!-- image off screen to stop lag of fading new item -->
					<control type="group">
						<visible>Integer.IsGreater(Container.NumItems,19)</visible>
						<left>1485</left>
						<animation effect="fade" end="50" condition="Container.Content(Movies) + [String.Contains(ListItem(8).FileName,missingvideo) | String.Contains(ListItem(8).FileName,Missingvideo)]">Conditional</animation>
						<control type="image">
							<include>3DWrapPosterCover</include>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster8]</texture>
						</control>
					</control>

					<control type="group">
						<left>1247</left>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" delay="0" time="250" reversible="false">Visible</animation>
						<animation effect="rotatey" center="1270" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,13)" />
							<param name="position" value="7" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>1177</left>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,11)" />
							<param name="position" value="6" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,9)" />
							<param name="position" value="5" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,7)" />
							<param name="position" value="4" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,5)" />
							<param name="position" value="3" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,3)" />
							<param name="position" value="2" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,1)" />
							<param name="position" value="1" />
							<param name="number" value="2" />
						</include>
					</control>
					
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="-120,0" time="350" reversible="false">Hidden</animation>
						<control type="group">
							<left>757</left>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="780" end="-30" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
							<control type="group">
								<control type="group">
									<include>MissingVideo3DWrapFadeAnim</include>
									<control type="image">
										<description>Cover Icon BG</description>
										<include>3DWrapPosterCoverIconBG</include>
										<visible>String.IsEmpty(ListItem.Thumb)</visible>
									</control>
									<control type="image">
										<description>Cover Icon</description>
										<include>3DWrapPosterCoverIcon</include>
										<texture background="true" colordiffuse="ffbbbbbb">$INFO[ListItem.ActualIcon]</texture>
										<visible>String.IsEmpty(ListItem.Thumb)</visible>
									</control>
									<control type="image">
										<include>3DWrapPosterCover</include>
										<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>
									</control>
									<control type="image">
										<include>3DWrapPosterCoverReflection</include>
										<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
									</control>
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
								</control>
								<control type="image">
									<info>ListItem.Overlay</info>
									<include>3DWrapOverlayImage2</include>
								</control>
								<control type="group">
									<visible>!String.IsEqual(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched2</include>
										<visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2A</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>Integer.IsLessOrEqual(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2B</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
						<control type="group">
							<left>717</left>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="694" end="-60" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
							<include content="3DWrapGroup">
								<param name="visible" value="Integer.IsGreater(Container.NumItems,2)" />
								<param name="position" value="-1" />
								<param name="number" value="1" />
							</include>
						</control>
					</control>
				</control> 
				
				<control type="group" id="5052">
					<depth>Depth3DWrapPosters</depth>
					<top>367</top>
					<camera x="640" y="540" />
					<visible>Control.IsVisible(588) + Container.OnPrevious</visible>
					<animation effect="slide" end="70,0" time="250" reversible="false">Hidden</animation>
					<control type="group">
						<left>1177</left>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,15)" />
							<param name="position" value="8" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,13)" />
							<param name="position" value="7" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,11)" />
							<param name="position" value="6" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,9)" />
							<param name="position" value="5" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,7)" />
							<param name="position" value="4" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,5)" />
							<param name="position" value="3" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>757</left>
						<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,3)" />
							<param name="position" value="2" />
							<param name="number" value="2" />
						</include>
					</control>
					
					<!-- image off screen to stop lag of fading new item -->
					<control type="group">
						<left>-600</left>
						<visible>Integer.IsGreater(Container.NumItems,20)</visible>
						<animation effect="fade" end="50" condition="Container.Content(Movies) + [String.Contains(ListItem(-8).FileName,missingvideo) | String.Contains(ListItem(-8).FileName,Missingvideo)]">Conditional</animation>
						<control type="image">
							<include>3DWrapPosterCover</include>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-8]</texture>
						</control>
					</control>
					
					<control type="group">
						<left>34</left>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="10" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,14)" />
							<param name="position" value="-7" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>104</left>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,12)" />
							<param name="position" value="-6" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,10)" />
							<param name="position" value="-5" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,8)" />
							<param name="position" value="-4" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,6)" />
							<param name="position" value="-3" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,4)" />
							<param name="position" value="-2" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,2)" />
							<param name="position" value="-1" />
							<param name="number" value="1" />
						</include>
					</control>

					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="120,0" time="350" reversible="false">Hidden</animation>
						<control type="group">
							<left>524</left>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="500" end="60" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
							<control type="group">
								<control type="group">
									<include>MissingVideo3DWrapFadeAnim</include>
									<control type="image">
										<description>Cover Icon BG</description>
										<include>3DWrapPosterCoverIconBG</include>
										<visible>String.IsEmpty(ListItem.Thumb)</visible>
									</control>
									<control type="image">
										<description>Cover Icon</description>
										<include>3DWrapPosterCoverIcon</include>
										<texture background="true" colordiffuse="ffbbbbbb">$INFO[ListItem.ActualIcon]</texture>
										<visible>String.IsEmpty(ListItem.Thumb)</visible>
									</control>
									<control type="image">
										<include>3DWrapPosterCover</include>
										<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>
									</control>
									<control type="image">
										<include>3DWrapPosterCoverReflection</include>
										<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
									</control>
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
								</control>
								<control type="image">
									<info>ListItem.Overlay</info>
									<include>3DWrapOverlayImage2</include>
								</control>
								<control type="group">
									<visible>!String.IsEqual(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched2</include>
										<visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2A</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>Integer.IsLessOrEqual(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2B</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
						<control type="group">
							<left>564</left>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="587" end="60" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
							<include content="3DWrapGroup">
								<param name="visible" value="Integer.IsGreater(Container.NumItems,1)" />
								<param name="position" value="1" />
								<param name="number" value="2" />
							</include>
						</control>
					</control>
				</control>
				
				<control type="group" id="5050">
					<depth>Depth3DWrapPosters</depth>
					<top>367</top>
					<animation effect="fade" time="500">WindowOpen</animation>
					<animation effect="fade" time="200">WindowClose</animation>
					<visible>Control.IsVisible(588) + ![Control.IsVisible(5051) | Control.IsVisible(5052)]</visible>
					<camera x="640" y="540" />
					<control type="group">
						<left>104</left>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,14)" />
							<param name="position" value="-7" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,12)" />
							<param name="position" value="-6" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,10)" />
							<param name="position" value="-5" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,8)" />
							<param name="position" value="-4" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,6)" />
							<param name="position" value="-3" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,4)" />
							<param name="position" value="-2" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>524</left>
						<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,2)" />
							<param name="position" value="-1" />
							<param name="number" value="1" />
						</include>
					</control>
					<control type="group">
						<left>1177</left>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,13)" />
							<param name="position" value="7" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,11)" />
							<param name="position" value="6" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,9)" />
							<param name="position" value="5" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,7)" />
							<param name="position" value="4" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,5)" />
							<param name="position" value="3" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,3)" />
							<param name="position" value="2" />
							<param name="number" value="2" />
						</include>
					</control>
					<control type="group">
						<left>757</left>
						<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
						<include content="3DWrapGroup">
							<param name="visible" value="Integer.IsGreater(Container.NumItems,1)" />
							<param name="position" value="1" />
							<param name="number" value="2" />
						</include>
					</control>
				</control>
				
				<control type="group">
					<visible>Control.IsVisible(588) + ![Control.IsVisible(5051) | Control.IsVisible(5052)]</visible>
					<depth>DepthContent+</depth>
					<left>543</left>
					<top>425</top>
					<animation effect="zoom" start="100" end="70" center="643,495" time="300" tween="circle" easing="inout" condition="ControlGroup(150).HasFocus | ControlGroup(850).HasFocus | Control.HasFocus(555)">Conditional</animation>
					<animation effect="zoom" start="75" end="100" center="643,470" easing="inout" time="300">Visible</animation>
					<control type="group">
						<control type="group">
							<include>MissingVideo3DWrapFadeAnim</include>
							<control type="image">
								<description>Cover Icon BG</description>
								<left>10</left>
								<top>25</top>
								<width>175</width>
								<height>240</height>
								<aspectratio>stretch</aspectratio>
								<texture diffuse="covers/3dwrap-poster-diffuse.png">dim.png</texture>
								<include>CoverDimAnim2</include>
								<visible>String.IsEmpty(ListItem.Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<left>10</left>
								<top>25</top>
								<width>175</width>
								<height>240</height>
								<aspectratio>keep</aspectratio>
								<texture background="true">$INFO[ListItem.ActualIcon]</texture>
								<visible>String.IsEmpty(ListItem.Thumb)</visible>
							</control>
							<control type="image">
								<top>15</top>
								<width>195</width>
								<height>260</height>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>
								<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
								<bordersize>10</bordersize>
								<aspectratio scalediffuse="false">stretch</aspectratio>
							</control>
							<control type="image">
								<left>10</left>
								<top>267</top>
								<width>175</width>
								<height>240</height>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
								<aspectratio scalediffuse="false">stretch</aspectratio>
							</control>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<left>10</left>
							<top>25</top>
							<width>175</width>
							<height>240</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
						</control>
						<control type="image">
							<description>Cover Reflection Overlay</description>
							<left>10</left>
							<top>267</top>
							<width>175</width>
							<height>240</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
						</control>
						<control type="image">
							<left>137</left>
							<top>35</top>
							<width>35</width>
							<height>35</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>!String.IsEmpty(ListItem.Overlay) + [[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]]</visible>
						</control>
						<control type="group">
							<visible>!String.IsEqual(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows)</visible>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>137</left>
								<top>35</top>
								<width>35</width>
								<height>35</height>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>40</top>
								<left>137</left>
								<width>35</width>
								<font>WideListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="85" condition="true">Conditional</animation>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + Integer.IsLessOrEqual(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>42</top>
								<left>137</left>
								<width>35</width>
								<font>ListFont5</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="85" condition="true">Conditional</animation>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
						</control>
					</control>
				</control>
			</control>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<depth>DepthContent+</depth>
				<top>BottomPaneOffsetY</top>
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>
			
			<control type="group" id="150">
				<depth>DepthContent+</depth>
				<animation type="Conditional" condition="ControlGroup(150).HasFocus" reversible="false">
					<effect type="fade" start="0" end="100" time="200"/>
					<effect type="zoom" start="70" end="100" center="640,687" time="400" tween="back" easing="inout"/>
				</animation>
				
				<animation type="Conditional" condition="!ControlGroup(150).HasFocus" reversible="false">
					<effect type="fade" start="100" end="0" time="200" delay="200"/>
					<effect type="zoom" start="100" end="70" center="640,687" time="400" tween="back" easing="inout"/>
				</animation>
				
				<control type="image">
					<left>550</left>
					<top>680</top>
					<width>180</width>
					<height>14</height>
					<texture border="4">controls/scrollbar-background.png</texture>
				</control>
				
				<control type="panel" id="979">
					<ondown>$VAR[ScrollbarTrailer2]</ondown>
					<include content="QuickJumpHorizontalLayout">
						<param name="left" value="550" />
						<param name="top" value="678" />
						<param name="width" value="180" />
						<param name="itemwidth" value="20" />
					</include>
				</control>
				
				<control type="scrollbar" id="929">
					<left>550</left>
					<top>680</top>
					<height>14</height>
					<width>180</width>
					<orientation>horizontal</orientation>
					<texturesliderbar border="2">controls/scrollbar-slider-horz-nofocus.png</texturesliderbar>
					<texturesliderbarfocus border="2">controls/scrollbar-slider-horz-focus.png</texturesliderbarfocus>
					<textureslidernib />
					<textureslidernibfocus />
					<onup>588</onup>
					<ondown>$VAR[ScrollbarTrailer2]</ondown>
					<visible>!Skin.HasSetting(EnableQuickJump)</visible>
				</control>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	<!--//// END 3D WRAP VIEW ////////////////////////////////////////////////////////////////////////////-->
	
	<!-- INCLUDES -->
	<variable name="3DWrapPoster-8">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(-8).Art(animatedposter))">$INFO[ListItem(-8).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-8).Art(poster))">$INFO[ListItem(-8).Art(poster)]</value>
        <value>$INFO[ListItem(-8).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-7">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(-7).Art(animatedposter))">$INFO[ListItem(-7).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
        <value>$INFO[ListItem(-7).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-6">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(-6).Art(animatedposter))">$INFO[ListItem(-6).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
        <value>$INFO[ListItem(-6).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-5">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(-5).Art(animatedposter))">$INFO[ListItem(-5).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
        <value>$INFO[ListItem(-5).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-4">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(-4).Art(animatedposter))">$INFO[ListItem(-4).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
        <value>$INFO[ListItem(-4).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-3">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(-3).Art(animatedposter))">$INFO[ListItem(-3).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
        <value>$INFO[ListItem(-3).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-2">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(-2).Art(animatedposter))">$INFO[ListItem(-2).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
        <value>$INFO[ListItem(-2).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-1">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(-1).Art(animatedposter))">$INFO[ListItem(-1).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
        <value>$INFO[ListItem(-1).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster8">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(8).Art(animatedposter))">$INFO[ListItem(8).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
        <value>$INFO[ListItem(8).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster7">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(7).Art(animatedposter))">$INFO[ListItem(7).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
        <value>$INFO[ListItem(7).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster6">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(6).Art(animatedposter))">$INFO[ListItem(6).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
        <value>$INFO[ListItem(6).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster5">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(5).Art(animatedposter))">$INFO[ListItem(5).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
        <value>$INFO[ListItem(5).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster4">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(4).Art(animatedposter))">$INFO[ListItem(4).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
        <value>$INFO[ListItem(4).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster3">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(3).Art(animatedposter))">$INFO[ListItem(3).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
        <value>$INFO[ListItem(3).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster2">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(2).Art(animatedposter))">$INFO[ListItem(2).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
        <value>$INFO[ListItem(2).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster1">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem(1).Art(animatedposter))">$INFO[ListItem(1).Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
        <value>$INFO[ListItem(1).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster0">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem.Art(animatedposter))">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value>$INFO[ListItem.Thumb]</value>
	</variable>
	
	<variable name="3DWrapFanart">
		<value condition="Container.Content(TVShows) + Skin.HasSetting(3DWrapShowLandscape) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>background-default.png</value>
	</variable>
	
	<include name="3DWrapTVShowOverlays">
		<control type="group">
			<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + !String.IsEqual(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows)</visible>
			<top>15</top>
			<left>89</left>
			<control type="image">
				<description>Unwatched Overlay</description>
				<width>26</width>
				<height>26</height>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<animation effect="fade" end="90" condition="true">Conditional</animation>
				<visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<width>26</width>
				<height>26</height>
				<font>ListFont3</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="90" condition="true">Conditional</animation>
				<visible>Integer.IsLessOrEqual(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<width>26</width>
				<height>26</height>
				<font>ListFont4</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="90" condition="true">Conditional</animation>
				<visible>Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
		</control>
	</include>
	
	<variable name="3DWrapRatingVar">
		<value condition="ListItem.IsCollection">$VAR[RatingType]</value>
		<value>$INFO[ListItem.RatingAndVotes]</value>
	</variable>
	
	<include name="3DWrapPosterCover">
		<left>-72</left>
		<top>78</top>
		<width>144</width>
		<height>205</height>
		<bordertexture border="9">covers/3dwrap-poster-shadow.png</bordertexture>
		<bordersize>10</bordersize>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverOverlay">
		<left>-62</left>
		<top>88</top>
		<width>124</width>
		<height>185</height>
 		<texture background="true">covers/3dwrap-poster-mask.png</texture>
	</include>
	
	<include name="3DWrapPosterCoverReflection">
		<left>-62</left>
		<top>275</top>
		<width>124</width>
		<height>185</height>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverReflectionOverlay">
		<left>-62</left>
		<top>275</top>
		<width>124</width>
		<height>185</height>
		<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverIcon">
		<left>-62</left>
		<top>88</top>
		<width>124</width>
		<height>185</height>
		<aspectratio>keep</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverIconBG">
		<left>-62</left>
		<top>88</top>
		<width>124</width>
		<height>185</height>
		<aspectratio>stretch</aspectratio>
		<texture diffuse="covers/3dwrap-poster-diffuse.png">dim.png</texture>
		<include>CoverDimAnim2</include>
	</include>
	
	<include name="3DWrapOverlayImage1">
		<left>-55</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<aspectratio>keep</aspectratio>
		<visible>[Container.Content(Movies) + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
	</include>
	
	<include name="3DWrapOverlayImage2">
		<left>30</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<aspectratio>keep</aspectratio>
		<visible>[Container.Content(Movies) + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
	</include>
		
	<include name="3DWrapOverlayUnwatched1">
		<left>-55</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<texture background="true">OverlayClean.png</texture>
		<aspectratio>keep</aspectratio>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapOverlayUnwatched2">
		<left>30</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<texture background="true">OverlayClean.png</texture>
		<aspectratio>keep</aspectratio>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes1A">
		<top>99</top>
		<left>-55</left>
		<width>26</width>
		<font>ListFont3</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes1B">
		<top>99</top>
		<left>-55</left>
		<width>26</width>
		<font>ListFont4</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes2A">
		<top>99</top>
		<left>30</left>
		<width>26</width>
		<font>ListFont3</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes2B">
		<top>99</top>
		<left>30</left>
		<width>26</width>
		<font>ListFont4</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapGroup">
		<control type="group">
			<visible>$PARAM[visible]</visible>
			<control type="group">
				<animation effect="fade" end="50" reversible="false" condition="Container.Content(Movies) + [String.Contains(ListItem($PARAM[position]).FileName,missingvideo) | String.Contains(ListItem($PARAM[position]).FileName,Missingvideo)]">Conditional</animation>
				<control type="image">
					<description>Cover Icon BG</description>
					<include>3DWrapPosterCoverIconBG</include>
					<visible>String.IsEmpty(ListItem($PARAM[position]).Thumb)</visible>
				</control>
				<control type="image">
					<description>Cover Icon</description>
					<include>3DWrapPosterCoverIcon</include>
					<texture background="true" colordiffuse="ffbbbbbb">$INFO[ListItem($PARAM[position]).ActualIcon]</texture>
					<visible>String.IsEmpty(ListItem($PARAM[position]).Thumb)</visible>
				</control>
				<control type="image">
					<include>3DWrapPosterCover</include>
					<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster$PARAM[position]]</texture>
				</control>
				<control type="image">
					<include>3DWrapPosterCoverReflection</include>
					<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster$PARAM[position]]</texture>
				</control>
			</control>
			<control type="image">
				<description>Cover Overlay</description>
				<include>3DWrapPosterCoverOverlay</include>
			</control>
			<control type="image">
				<description>Cover Reflection Overlay</description>
				<include>3DWrapPosterCoverReflectionOverlay</include>
			</control>
			<control type="image">
				<info>ListItem($PARAM[position]).Overlay</info>
				<include>3DWrapOverlayImage$PARAM[number]</include>
			</control>
			<control type="group">
				<visible>!String.IsEqual(ListItem($PARAM[position]).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
				<control type="image">
					<include>3DWrapOverlayUnwatched$PARAM[number]</include>
					<visible>!String.IsEmpty(ListItem($PARAM[position]).Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<include>3DWrapUnwatchedEpisodes$PARAM[number]A</include>
					<label>$INFO[ListItem($PARAM[position]).Property(UnWatchedEpisodes)]</label>
					<visible>Integer.IsLessOrEqual(ListItem($PARAM[position]).Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<include>3DWrapUnwatchedEpisodes$PARAM[number]B</include>
					<label>$INFO[ListItem($PARAM[position]).Property(UnWatchedEpisodes)]</label>
					<visible>Integer.IsGreater(ListItem($PARAM[position]).Property(UnWatchedEpisodes),99)</visible>
				</control>
			</control>
		</control>
	</include>
	<!-- END INCLUDES -->
</includes>